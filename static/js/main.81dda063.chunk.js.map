{"version":3,"sources":["assets/back3.jpg","components/CascadUser.js","service/user/userActions.js","service/user/userTypes.js","service/post/postActions.js","service/post/postTypes.js","service/user/authentication/authActions.js","service/user/authentication/authTypes.js","components/Header.js","pages/Chat.js","utils/authToken.js","components/CardApp.js","pages/Filter.js","pages/Home.js","components/UploadPhoto.js","components/Announcement.js","pages/Add_announcement.js","service/UserService.js","components/MyProfile/AboutClient.js","components/MyProfile/Favorites.js","components/smallerCardApp.js","components/MyProfile/UsersPost.js","components/MyProfile/tabs.js","components/MyProfile/MyProfile.js","components/Sider.js","components/RegistrationForm.js","pages/RegisterPage.js","pages/LoginForm.js","pages/LoginPage.js","components/useFetch.js","pages/detailsPage.js","App.js","serviceWorker.js","service/user/userReducer.js","service/user/authentication/authReducer.js","service/post/postReducer.js","service/rootReducers.js","service/store.js","index.js","assets/logo2.png"],"names":["module","exports","CascadUser","style","marginLeft","size","type","shape","UserOutlined","userRequest","userSavedSuccess","user","payload","userFailure","error","postSuccess","post","postFailure","logoutUser","dispatch","localStorage","removeItem","success","isLoggedIn","failure","HeaderApp","auth","useSelector","state","useDispatch","guestLinks","offset","exact","to","color","userLinks","onClick","className","offsetTop","width","background","padding","height","PreviewGroup","preview","src","logo","chat","authToken","token","axios","defaults","headers","common","Meta","Card","CardApp","product","id","hoverable","margin","cover","alt","photo","actions","HeartTwoTone","key","twoToneColor","MessageTwoTone","title","avatar","category","Filter","useState","products","setProducts","useEffect","get","then","data","menuKey","getItem","noProduct","align","justify","Text","allProduct","map","p","yesProduct","Title","level","filter","length","Home","jwtToken","console","log","UploadPhoto","image","setImage","setPhoto","name","accept","onChange","e","target","files","FormData","append","fetch","method","body","resp","json","url","message","r","setItem","catch","err","Announcement","props","initialState","modalVisible","description","userid","handleCancelModal","window","location","replace","resetPost","setState","submitPost","event","preventDefault","setModalVisible","postChange","value","handleChange","bind","this","centered","visible","onCancel","footer","labelCol","span","wrapperCol","onSubmitCapture","Item","label","rules","min","max","required","whitespace","placeholder","TextArea","rows","htmlType","Component","connect","postObject","savePost","response","Add_announcement","USER_API_BASE_URL","userId","put","delete","Select","AboutClient","updateUser","firstName","lastName","email","password","phone","province","JSON","stringify","UserService","res","history","push","changeFirstNameHandler","changeLastNameHandler","changePhoneHandler","changeProvinceHandler","toggleDisabled","disabled","showButton","displayButton","marginRight","dontDisplayButton","bordered","prefix","withRouter","Favorites","overflow","SmallerCardApp","UsersPost","setUser","products2","item","danger","Tabs","toggleState","setToggleState","toggleTab","index","MyProfile","Sider","Layout","SiderApp","ghost","mode","position","left","RegistrationForm","showError","userChange","registerUser","userObject","resetRegistrationForm","setTimeout","variant","onClose","dismissible","hasFeedback","Password","dependencies","getFieldValue","validator","_","Promise","reject","Error","resolve","valuePropName","href","a","Register","backgroundImage","LoginForm","credentialChange","validateUser","authenticateUser","resetLoginForm","noStyle","username","Login","useFetch","setData","isPending","setIsPending","setError","ok","DetailsPage","useParams","userVisible","setUserVisible","userpost","setUserPost","marginTop","marginBottom","notification","duration","first","tip","Paragraph","created","App","Header","path","component","LoginPage","Boolean","hostname","match","users","reducer","action","rootReducers","combineReducers","userReducer","postReducer","authReducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yHAAAA,EAAOC,QAAU,IAA0B,mC,mPCgB5BC,EAZI,WAEf,OAEI,kBAAC,IAAD,CAAQC,MAAO,CAACC,WAAY,QAASC,KAAM,QAASC,KAAM,UAAWC,MAAO,UACxE,kBAACC,EAAA,EAAD,Q,oDCSNC,EAAc,WAChB,MAAO,CACHH,KCpBoB,iBDwBtBI,EAAmB,SAACC,GACtB,MAAO,CACHL,KCvB0B,qBDwB1BM,QAASD,IAWXE,EAAc,SAACC,GACjB,MAAO,CACHR,KCtCoB,eDuCpBM,QAASE,IE2BXC,EAAc,SAACC,GACjB,MAAO,CACHV,KClEoB,eDmEpBM,QAASI,IAIXC,EAAc,SAACH,GACjB,MAAO,CACHR,KCxEoB,eDyEpBM,QAASE,IEnDJI,EAAa,WACtB,OAAO,SAAAC,GACHA,EAAS,CACLb,KC7BkB,mBD+BtBc,aAAaC,WAAW,YACxBD,aAAaC,WAAW,cACxBF,EAASG,GAAQ,MAInBA,EAAU,SAAAC,GACZ,MAAO,CACHjB,KCtCe,UDuCfM,QAASW,IAKXC,EAAU,SAAAD,GACZ,MAAO,CACHjB,KC7Ce,UD8CfM,QAASW,I,iBEgCFE,EAvEI,WAEf,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCP,EAAWU,cAMPC,EACF,oCACI,kBAAC,IAAD,CAAKC,OAAQ,IACb,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAI,UACZ,kBAAC,IAAD,CAAQ3B,KAAK,QAAb,WAKA,kBAAC,IAAD,CAAM0B,OAAK,EAACC,GAAI,aACZ,kBAAC,IAAD,CAAQ3B,KAAK,OAAOH,MAAO,CAAC+B,MAAM,YAAlC,eAQVC,EACF,oCACI,kBAAC,IAAD,CAAKJ,OAAQ,IACT,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAG,cAAa,kBAAC,EAAD,QAIhC,kBAAC,IAAD,CAAK9B,MAAO,CAACC,WAAY,QACrB,kBAAC,IAAD,CAAM4B,OAAK,EAACC,GAAI,IAAKG,QA9BtB,WACXjB,EAASD,OA8BO,kBAAC,IAAD,CAAQZ,KAAK,OAAOH,MAAO,CAAC+B,MAAM,YAAlC,cAQhB,OACI,yBAAKG,UAAW,YACZ,kBAAC,IAAD,CAAOC,UAAW,GACd,kBAAC,IAAD,CAAQnC,MAAO,CACXoC,MAAO,OAAQC,WAAY,qBAAsBC,QAAS,UAAWC,OAAQ,SAG7E,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKX,OAAQ,GACT,kBAAC,IAAD,CAAMC,OAAK,EAACC,GAAI,KAAK,kBAAC,IAAMU,aAAP,KACjB,kBAAC,IAAD,CAAOJ,MAAO,GAAIK,SAAS,EAAOzC,MAAO,CAACsC,QAAS,WAC5CI,IAAKC,SAGpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMd,OAAK,EAACC,GAAI,KAAK,wBAAII,UAAW,UAAf,YAExBX,EAAKH,WAAaY,EAAYL,O,QC5D5CiB,EARF,WACT,OACK,6BACI,sC,iBCIEC,EARG,SAACC,GACXA,EACAC,IAAMC,SAASC,QAAQC,OAAvB,wBAAoDJ,UAE7CC,IAAMC,SAASC,QAAQC,OAAvB,e,2BCARC,EAAQC,IAARD,KA8BQE,EA5BC,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACZ,kBAAC,IAAD,CAAMzB,OAAK,EAACC,GAAE,gBAAWwB,EAAQC,KAC7B,yBAAKrB,UAAW,UACZ,kBAAC,IAAD,CACIsB,WAAS,EACTxD,MAAO,CAACoC,MAAO,IAAKqB,OAAQ,QAC5BC,MACI,yBACIC,IAAI,UACJ3D,MAAS,CAACuC,OAAQ,QAASH,MAAO,SAClCM,IAAKY,EAAQM,QAErBC,QAAS,CACL,kBAACC,EAAA,EAAD,CAAcC,IAAI,MAAMC,aAAa,YACrC,kBAACC,EAAA,EAAD,CAAgBF,IAAI,OAAOC,aAAa,cAI5C,kBAACb,EAAD,CACIe,MAAOZ,EAAQY,MACfC,OAAQ,kBAAC9D,EAAA,EAAD,MACR+D,SAAUd,EAAQc,e,kCCwCvBC,EA9DA,WAAO,IAAD,EAEeC,mBAAS,IAFxB,mBAEVC,EAFU,KAEAC,EAFA,KAIjBC,qBAAU,WACN1B,IAAM2B,IAAI,+BAA+BC,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAAYI,QACvE,IAEH,IAAMC,EAAU5D,aAAa6D,QAAQ,WAE/BC,EACF,kBAAC,IAAD,CAAOC,MAAO,SAAUhF,MAAO,CAACuC,OAAO,SACnC,kBAAC,IAAD,CAAK0C,QAAS,UACV,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAKA,QAAS,UACV,kBAACC,EAAA,EAAD,CAAM/E,KAAM,aAAZ,iCAAwD0E,KAM9DM,EACF,oCACI,kBAAC,IAAD,CAAKnF,MAAO,CAACsC,QAAS,OAAQrC,WAAY,MAE3B,KAAX4E,EAEIN,EAASa,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAS/B,QAAS+B,OAEtCN,IAMVO,EACF,oCACI,kBAAC,IAAD,CAAKL,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,iCAAgDX,IAEpD,kBAAC,IAAD,CAAK7E,MAAO,CAACsC,QAAS,OAAQrC,WAAY,MAE9BsE,EAASkB,QAAO,SAAClB,GAAD,OAAcA,EAASH,UAAYS,KAC9CO,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAS/B,QAAS+B,SAMtD,OACI,oCAGwG,IAAhGd,EAASkB,QAAO,SAAClB,GAAD,OAAcA,EAASH,WAAanD,aAAa6D,QAAQ,cAAYY,OAEjFP,EAAaG,ICtBlBK,EAjCF,WAEL1E,aAAa2E,UACb/C,EAAU5B,aAAa2E,UAI3B,IAAMrE,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACpCP,EAAWU,cAGjBmE,QAAQC,IAAIvE,EAAKH,aACZG,EAAKH,YAAcH,aAAa2E,UACjC5E,EAASD,KAbE,MAiBiBuD,mBAAS,IAjB1B,mBAiBEE,GAjBF,WAuBf,OAJAC,qBAAU,WACN1B,IAAM2B,IAAI,+BAA+BC,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAAYI,QACvE,IAGC,oCACI,kBAAC,IAAD,KACI,kBAAC,EAAD,S,6GCyBDmB,GAvDK,WAAO,IAAD,EAEIzB,mBAAS,IAFb,mBAEf0B,EAFe,KAERC,EAFQ,OAGI3B,mBAAS,IAHb,mBAGfV,EAHe,KAGRsC,EAHQ,OAIL5B,mBAAS,IAJJ,oBA+BtB,OACI,6BAEI,kBAAC,IAAD,KACI,kBAAC,KAAD,CAAO6B,KAAM,QACNC,OAAO,UACPjG,KAAK,OACLkG,SAAW,SAACC,GAAD,OAAML,EAASK,EAAEC,OAAOC,MAAM,QAGpD,kBAAC,IAAD,CAAKvB,QAAS,SAAUjF,MAAO,CAACsC,QAAQ,OACpC,kBAAC,IAAD,CAAQnC,KAAM,UAAW8B,QAlCjB,WAChB,IAAM2C,EAAO,IAAI6B,SACjB7B,EAAK8B,OAAO,OAAQV,GACpBpB,EAAK8B,OAAO,gBAAiB,UAC7B9B,EAAK8B,OAAO,aAAa,aACzBC,MAAM,2DAA2D,CAC7DC,OAAO,OACPC,KAAMjC,IAELD,MAAK,SAAAmC,GAAI,OAAIA,EAAKC,UAClBpC,MAAK,SAAAC,GACFsB,EAAStB,EAAKoC,KACdC,KAAQ9F,QAAQ,yCAAyCwD,MAAK,SAAAuC,GAAC,OAAID,QACnEhG,aAAakG,QAAQ,YAAavC,EAAKoC,QAG1CI,OAAM,SAACC,GACJxB,QAAQC,IAAIuB,GACZJ,KAAQtG,MAAM,mCAAmCgE,MAAK,SAAAuC,GAAC,OAAID,aAgB3D,qBAEJ,kBAAC,IAAD,KACI,+DACA,kBAAC,IAAD,CAAO7E,MAAO,IAAKM,IAAKkB,KAG5B,gCChCN0D,G,mDAGF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,aAAe,CACXC,cAAc,EACdlE,GAAI,GACJmE,YAAa,GACbtD,SAAU,qBACVR,MAAO,GACP+D,OAAQ,IAbO,EAoBnBC,kBAAoB,WAChB/B,QAAQC,IAAI,yBACZ+B,OAAOC,SAASC,QAAQ,MAtBT,EA0BnBC,UAAY,WACR,EAAKC,UAAS,kBAAM,EAAKT,iBA3BV,EA8BnBU,WAAa,SAAAC,GACTA,EAAMC,iBAEN,IAAMvH,EAAO,CACTqD,MAAQ,EAAKzC,MAAMyC,MACnBwD,YAAc,EAAKjG,MAAMiG,YACzBtD,SAAU,EAAK3C,MAAM2C,SACrBR,MAAO3C,aAAa6D,QAAQ,aAC5B6C,OAAQ1G,aAAa6D,QAAQ,eAEjC/B,IAAMlC,KAAK,uCAAwCA,GAC9C8D,MAAK,WAAQ,EAAKsD,SAAS,EAAKT,iBAChC7C,MAAK,kBAAM,EAAK0D,iBAAgB,OA1CtB,EA6CnBC,WAAa,SAAAH,GACT,EAAKF,SAAL,eACKE,EAAM5B,OAAOJ,KAAOgC,EAAM5B,OAAOgC,SA/CvB,EAmDnBC,aAAc,SAAAlC,GACd,EAAK2B,SAAS,CAAC7D,SAASkC,KAlDpB,EAAK7E,MAAQ,EAAK+F,aAClB,EAAKc,WAAa,EAAKA,WAAWG,KAAhB,gBAClB,EAAKP,WAAa,EAAKA,WAAWO,KAAhB,gBAJH,E,4DAgBHhB,GACZiB,KAAKT,SAAS,CAAER,mB,+BAsChB,OACI,oCACI,kBAAC,KAAD,CACIkB,UAAQ,EACRC,QAASF,KAAKjH,MAAMgG,aACpBoB,SAAYH,KAAKd,kBACjBkB,OAAQ,CACJ,kBAAC,IAAD,CAAMjH,OAAK,EAACC,GAAM,KAClB,kBAAC,IAAD,gBAIJ,kBAAC,IAAD,CAAKmD,QAAS,UACd,2BACI,kBAAC,IAAD,CAAO7C,MAAO,GAAIK,SAAS,EAAOzC,MAAO,CAACsC,QAAS,WAC7CI,IAAKC,QAGf,kBAAC,IAAD,CAAKsC,QAAS,UACd,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,sCAIJ,kBAAC,KAAD,CACIuD,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVhJ,MAAO,CAACoC,MAAM,KAEd8G,gBAAiBR,KAAKR,YAEtB,kBAAC,KAAKiB,KAAN,CACIhD,KAAK,QACLiD,MAAM,QACNC,MAAO,CACH,CACIC,IAAK,EACLC,IAAI,GACJC,UAAU,EACVvC,QAAS,qDACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,CAAOsH,YAAY,eAAevD,KAAK,QAAQjE,UAAU,eAClDqG,MAAOG,KAAKjH,MAAMyC,MAAOmC,SAAUqC,KAAKJ,cAGnD,kBAAC,KAAKa,KAAN,CACIhD,KAAK,cACLiD,MAAM,YACNC,MAAO,CACH,CACIC,IAAI,GACJE,UAAU,EACVvC,QAAS,yDACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAMuH,SAAP,CAAgBC,KAAM,EAAGF,YAAY,oBAAoBvD,KAAK,cAAejE,UAAU,eAChFqG,MAAOG,KAAKjH,MAAMiG,YAAarB,SAAUqC,KAAKJ,cAG7D,kBAAC,KAAKa,KAAN,CACIhD,KAAK,WACLiD,MAAM,YACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,mBACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,CACIsH,YAAY,kBACZvD,KAAO,WACPoC,MAAOG,KAAKjH,MAAM2C,SAAUiC,SAAUqC,KAAKF,cAC3C,kBAAC,KAAD,CAAQD,MAAM,sBAAd,sBACA,kBAAC,KAAD,CAAQA,MAAM,kCAAd,kCACA,kBAAC,KAAD,CAAQA,MAAM,cAAd,cACA,kBAAC,KAAD,CAAQA,MAAM,8BAAd,8BACA,kBAAC,KAAD,CAAQA,MAAM,sBAAd,sBACA,kBAAC,KAAD,CAAQA,MAAM,uBAAd,uBACA,kBAAC,KAAD,CAAQA,MAAM,UAAd,UACA,kBAAC,KAAD,CAAQA,MAAM,kBAAd,kBACA,kBAAC,KAAD,CAAQA,MAAM,qBAAd,qBACA,kBAAC,KAAD,CAAQA,MAAM,wBAAd,wBACA,kBAAC,KAAD,CAAQA,MAAM,4BAAd,8BAMJ,kBAAC,KAAKY,KAAN,CACIhD,KAAK,QACLiD,MAAM,eAEN,kBAAC,GAAD,OAIA,kBAAC,IAAD,CAAQjJ,KAAK,SACJ0J,SAAS,UADlB,2B,GAvKGC,aA+LZC,gBAZS,SAAAtI,GACpB,MAAM,CACFuI,WAAWvI,EAAMZ,SAIE,SAAAG,GACvB,MAAM,CACFiJ,SAAU,SAACD,GAAD,OAAgBhJ,GX5MTH,EW4M2BmJ,EX3MzC,SAAChJ,GACJA,EAAS,CACLb,KCPqB,sBDSzB4C,IACKlC,KAAK,8BAA+BA,GACpC8D,MAAK,SAACuF,GACHlJ,EAASJ,EAAYsJ,EAAStF,UAEjCwC,OAAM,SAACzG,GACJK,EAASF,EAAYH,UAXb,IAACE,MWgNVkJ,CAA6CzC,ICvL7C6C,GAzBU,WACrB,OACI,oCACI,kBAAC,IAAD,CAAQnK,MAAO,CAACuC,OAAO,UAEnB,kBAAC,IAAD,KACI,wBAAIvC,MAAO,CAAC,YAAY,GACpBC,WAAW,OACXqC,QAAQ,OACRP,MAAM,YAHV,qBAQJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKH,OAAQ,GACT,kBAAC,GAAD,W,oBCjBlBwI,GAAoB,sCA8BX,O,mGAxBP,OAAOrH,IAAM2B,IAAI0F,M,wCAIjB,OAAOrH,IAAM2B,IAAI,0C,iCAGVlE,GACP,OAAOuC,IAAMlC,KAAKuJ,GAAmB5J,K,kCAG7B6J,GACR,OAAOtH,IAAM2B,IAAI0F,GAAoB,IAAMC,K,iCAGpC7J,GACP,OAAOuC,IAAMuH,IAAI,wCAA+C9J,K,iCAGzD6J,GACP,OAAOtH,IAAMwH,OAAOH,GAAoB,IAAOC,O,mBCjB1CG,M,IAIPC,G,mDAEF,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAiCVmD,WAAa,SAACvC,GACVA,EAAMC,iBAEN,IAAI5H,EAAO,CACPmK,UAAW,EAAKlJ,MAAMkJ,UACtBC,SAAU,EAAKnJ,MAAMmJ,SACrBC,MAAO,EAAKpJ,MAAMoJ,MAClBC,SAAU,EAAKrJ,MAAMqJ,SACrBC,MAAO,EAAKtJ,MAAMsJ,MAClBC,SAAU,EAAKvJ,MAAMuJ,UAEzBnF,QAAQC,IAAI,WAAamF,KAAKC,UAAU1K,IACxC,EAAK6H,iBAAgB,GACrB8C,GAAYT,WAAWlK,EAAM,EAAKiB,MAAM8B,IAAIoB,MAAM,SAAAyG,GAC9C,EAAK7D,MAAM8D,QAAQC,KAAK,kBAhDb,EAqDnBC,uBAAwB,SAACpD,GACrB,EAAKF,SAAS,CAAC0C,UAAWxC,EAAM5B,OAAOgC,SAtDxB,EAyDnBiD,sBAAuB,SAACrD,GACpB,EAAKF,SAAS,CAAC2C,SAAUzC,EAAM5B,OAAOgC,SA1DvB,EA6DnBkD,mBAAoB,SAACtD,GACjB,EAAKF,SAAS,CAAC8C,MAAO5C,EAAM5B,OAAOgC,SA9DpB,EAiEnBmD,sBAAuB,SAACvD,GACpB,EAAKF,SAAS,CAAC+C,SAAU7C,EAAM5B,OAAOgC,SAlEvB,EAqEnBoD,eAAiB,WACb,EAAK1D,SAAS,CACV2D,UAAW,EAAKnK,MAAMmK,SACtBC,YAAa,EAAKpK,MAAMoK,cArE5B,EAAKpK,MAAQ,CACTkJ,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVY,UAAU,EACVC,YAAY,EACZpE,cAAc,GAZH,E,gEAgBE,IAAD,OAChB1E,IAAM2B,IAAI,wCACRC,MAAK,SAACyG,GACJ,IAAI5K,EAAO4K,EAAIxG,KACf,EAAKqD,SAAS,CACV0C,UAAWnK,EAAKmK,UAChBC,SAAUpK,EAAKoK,SACfC,MAAOrK,EAAKqK,MACZC,SAAUtK,EAAKsK,SACfC,MAAOvK,EAAKuK,MACZC,SAAUxK,EAAKwK,WAEnBnF,QAAQC,IAAI,WAAamF,KAAKC,UAAU1K,OACzC4G,OAAM,SAACzG,GACNkF,QAAQC,IAAInF,EAAMuJ,e,sCA8CVzC,GACZiB,KAAKT,SAAS,CAAER,mB,+BAKhB,IAAMqE,EACd,kBAAC,IAAD,KACY,kBAAC,KAAK3C,KAAN,CAAWnJ,MAAO,CAAC+L,YAAY,QAC3B,kBAAC,IAAD,CAAQ5L,KAAK,WAAb,aAKR,kBAAC,KAAKgJ,KAAN,KACI,kBAAC,IAAD,CAAQlH,QAASyG,KAAKgC,WAAYb,SAAU,SAAU1J,KAAK,WAA3D,kBAQE6L,EACF,kBAAC,KAAK7C,KAAN,KACI,kBAAC,IAAD,CAAQlH,QAASyG,KAAKiD,eAAgBxL,KAAK,WAA3C,yBASR,OADA0F,QAAQC,IAAI7E,aAAa6D,QAAQ,aAG7B,6BACI,kBAAC,KAAD,CACI6D,UAAQ,EACRC,QAASF,KAAKjH,MAAMgG,aACpBqB,OAAQ,CACJ,kBAAC,IAAD,CAAMjH,OAAK,EAACC,GAAM,KACd,kBAAC,IAAD,+BAIR,kBAAC,IAAD,CAAKmD,QAAS,UACV,2BACI,kBAAC,IAAD,CAAO7C,MAAO,GAAIK,SAAS,EAAOzC,MAAO,CAACsC,QAAS,WAC5CI,IAAKC,QAGpB,kBAAC,IAAD,CAAKsC,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,qCAEJ,kBAAC,IAAD,CAAKP,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,qBAEJ,kBAAC,IAAD,CAAKP,QAAS,UACV,kBAACC,EAAA,EAAD,CAAM/E,KAAM,aAAZ,yCAKR,yBAAK+B,UAAU,iCACX,kBAAC,IAAD,CAAMgC,MAAM,YAAY+H,UAAU,GAC9B,qCAAWvD,KAAKjH,MAAMoJ,OAEtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAK7B,KAAM,GACP,kBAAC,KAAD,CAAQ9I,KAAM,IAAKwC,IAAI,4DAE3B,kBAAC,IAAD,CAAKsG,KAAM,IACP,kBAAC,KAAD,CACID,SAAU,CACNC,KAAM,GAEVC,WAAY,CACRD,KAAM,KAIV,kBAAC,KAAKG,KAAN,CACIhD,KAAK,QACLiD,MAAM,SACNC,MAAO,CACH,CACIlJ,KAAM,QACN8G,QAAS,0BAEb,CACIuC,UAAU,EACVvC,QAAS,gCAIjB,kBAAC,KAAD,CAAOsB,MAAOG,KAAKjH,MAAMoJ,MAAOnB,YAAahB,KAAKjH,MAAMoJ,MAAOe,SAAUlD,KAAKjH,MAAMmK,YAGxF,kBAAC,KAAKzC,KAAN,CACIhD,KAAK,OACLiD,MAAM,UACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,8BACTwC,YAAY,KAIpB,kBAAC,KAAD,CAAOlB,MAAOG,KAAKjH,MAAMkJ,UAAWjB,YAAahB,KAAKjH,MAAMkJ,UAAWtE,SAAUqC,KAAK6C,0BAK1F,kBAAC,KAAKpC,KAAN,CACIhD,KAAK,UACLiD,MAAM,OACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,2BACTwC,YAAY,KAIpB,kBAAC,KAAD,CAAOlB,MAAOG,KAAKjH,MAAMmJ,SAAUlB,YAAahB,KAAKjH,MAAMmJ,SAAUvE,SAAUqC,KAAK8C,yBAGxF,kBAAC,KAAKrC,KAAN,CACIhD,KAAK,YACLiD,MAAM,SACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,kCAIjB,kBAAC,KAAD,CAAOsB,MAAOG,KAAKjH,MAAMuJ,SAAUtB,YAAahB,KAAKjH,MAAMuJ,SAAU3E,SAAUqC,KAAKgD,yBAGxF,kBAAC,KAAKvC,KAAN,CACIhD,KAAK,QACLiD,MAAM,gBACNC,MAAO,CACH,CACIG,UAAU,EACVF,IAAK,EACLC,IAAK,EACLtC,QAAS,0CAKjB,kBAAC,KAAD,CAAO9G,KAAM,SACN+L,OAAO,OACP3D,MAAOG,KAAKjH,MAAMsJ,MAClBrB,YAAahB,KAAKjH,MAAMsJ,MACxB1E,SAAUqC,KAAK+C,sBAKzB/C,KAAKjH,MAAMoK,WAAaC,EAAgBE,Y,GAlPnDlC,aAgQXqC,eAAW1B,ICrPX2B,GArBG,WACd,OAEI,6BAEI,yBAAKlK,UAAU,iCACX,kBAAC,IAAD,CAAMgC,MAAM,iBAAiB+H,UAAU,EAAOjM,MAAO,CAACqM,SAAS,OAAQ9J,OAAO,cCNvFY,GAAQC,IAARD,KAuCQmJ,GAnCQ,SAAC,GAAe,IAAdhJ,EAAa,EAAbA,QAErB,OACI,yBAAKpB,UAAW,UACZ,kBAAC,IAAD,CAAO8C,MAAM,UACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMnD,OAAK,EAACC,GAAE,gBAAWwB,EAAQC,KAC7B,kBAAC,IAAD,CACIC,WAAS,EACTxD,MAAO,CAACoC,MAAO,IAAKqB,OAAQ,QAC5BC,MACI,yBACIC,IAAI,UACJjB,IAAKY,EAAQM,QAErBC,QAAS,CACL,kBAACC,EAAA,EAAD,CAAcC,IAAI,MAAMC,aAAa,YACrC,kBAACC,EAAA,EAAD,CAAgBF,IAAI,OAAOC,aAAa,cAI5C,kBAAC,GAAD,CACIE,MAAOZ,EAAQY,MACfC,OAAQ,kBAAC9D,EAAA,EAAD,MACR+D,SAAUd,EAAQc,iBCoBnCmI,GA/CI,WAAO,IAAD,EAEWjI,mBAAS,IAFpB,mBAEdC,EAFc,KAEJC,EAFI,OAGGF,mBAAS,IAHZ,mBAGd9D,EAHc,KAGRgM,EAHQ,KAMrB/H,qBAAU,WACN1B,IAAM2B,IAAI,+BAA+BC,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAYJ,EAAYI,QACvE,IAGHH,qBAAU,WACN1B,IAAM2B,IAAI,wCAAwCC,MAAK,gBAAEC,EAAF,EAAEA,KAAF,OAAY4H,EAAQ5H,QAC5E,IAUC,OACI,oCACI,yBAAK1C,UAAU,iCACX,kBAAC,IAAD,CAAMgC,MAAM,iBAAiB+H,UAAU,EAAOjM,MAAO,CAACqM,SAAS,OAAQ9J,OAAO,UAChFgC,EAASkB,QAAO,SAAClB,GAAD,OAAc/D,EAAKqK,OAAStG,EAASoD,UAClDvC,KAAI,SAACC,GAAD,OACD,oCACI,kBAAC,GAAD,CAAgB/B,QAAS+B,IACzB,6BACI,kBAAC,IAAD,CAAQpD,QAAS,SAACqE,GAAD,OAhBrB/C,EAgB0C8B,EAAE9B,QAfhER,IAAMwH,OAAN,sCAA4ChH,IAAOoB,MAAK,SAAAyG,GACpD,IAAMqB,EAAYlI,EAASkB,QAAO,SAAAiH,GAAI,OAAIA,EAAKnJ,KAAOA,KACtDiB,EAAaiI,MAHE,IAAClJ,GAiBYpD,KAAK,UAAUwM,QAAM,EACrB3M,MAAO,CAACyD,OAAQ,OAAQxD,WAAW,OAF3C,mBCoBjB2M,OApDf,WAAiB,IAAD,EAC0BtI,mBAAS,GADnC,mBACLuI,EADK,KACQC,EADR,KAGNC,EAAY,SAACC,GACfF,EAAeE,IAGnB,OACI,yBAAK9K,UAAU,aACX,yBAAKA,UAAU,aACX,4BACIA,UAA2B,IAAhB2K,EAAoB,mBAAqB,OACpD5K,QAAS,kBAAM8K,EAAU,KAF7B,cAMA,4BACI7K,UAA2B,IAAhB2K,EAAoB,mBAAqB,OACpD5K,QAAS,kBAAM8K,EAAU,KAF7B,kBAMA,4BACI7K,UAA2B,IAAhB2K,EAAoB,mBAAqB,OACpD5K,QAAS,kBAAM8K,EAAU,KAF7B,aAQJ,yBAAK7K,UAAU,gBACX,yBACIA,UAA2B,IAAhB2K,EAAoB,0BAA4B,WAE5D,kBAAC,GAAD,OAGH,yBACI3K,UAA2B,IAAhB2K,EAAoB,0BAA4B,WAE3D,kBAAC,GAAD,OAGJ,yBACI3K,UAA2B,IAAhB2K,EAAoB,0BAA4B,WAE3D,kBAAC,GAAD,UCjCJI,GAbE,WACV,OACI,oCACI,kBAAC,IAAD,KAEA,kBAAC,GAAD,S,UCNTC,GAASC,IAATD,MAEDE,G,wKACQ,IAAD,OACCpL,EACF,yBAAKhC,MAAO,CAACsC,QAAS,cAClB,kBAAC,IAAD,CAAMT,OAAK,EAACC,GAAG,qBAAoB,kBAAC,IAAD,CAAQ3B,KAAK,UAAUkN,OAAK,GAA5B,qBAOrC1L,EACF,yBAAK3B,MAAO,CAACsC,QAAS,cAClB,kBAAC,IAAD,CAAMT,OAAK,EAACC,GAAG,UAAS,kBAAC,IAAD,CAAQ3B,KAAK,UAAUkN,OAAK,GAA5B,qBAYhC,OACI,yBAAKnL,UAAW,SACZ,kBAACgL,GAAD,CAAOhL,UAAU,yBAAyBE,MAAO,KAE7C,kBAAC,KAAD,CACIH,QAXI,SAAAqE,GAChBrF,aAAakG,QAAQ,UAAWb,EAAEvC,KAClC,EAAKwD,MAAM8D,QAAQC,KAAK,KACxBzF,QAAQC,IAAIQ,EAAEvC,MASFuJ,KAAK,SACLtN,MAAO,CACHuC,OAAQ,OACRgL,SAAU,QACVC,KAAM,EACNpL,MAAO,UAGVsG,KAAKnB,MAAMhG,KAAKH,WAAaY,EAAYL,EAE1C,kBAAC,KAAKwH,KAAN,CAAWpF,IAAI,KAAf,mBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,sBAAf,sBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,kCAAf,kCACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,cAAf,cACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,8BAAf,8BACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,sBAAf,sBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,uBAAf,uBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,UAAf,UACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,kBAAf,kBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,qBAAf,qBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,wBAAf,wBACA,kBAAC,KAAKoF,KAAN,CAAWpF,IAAI,4BAAf,mC,GApDD+F,aAmERC,gBANS,SAAAtI,GACpB,MAAO,CACHF,KAAME,EAAMF,QAILwI,CAAyBoC,YAAWiB,K,oBC3D7CK,G,mDAEF,WAAYlG,GAAQ,IAAD,8BACf,cAAMA,IAIVC,aAAe,CACXC,cAAc,EACd9G,MAAO,GACP+M,WAAW,EACX/C,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,MAAO,GACPC,SAAU,IAdK,EAsBnBpD,kBAAoB,WAChB/B,QAAQC,IAAI,yBACZ,EAAKyB,MAAM8D,QAAQC,KAAK,MAxBT,EA2BnBqC,WAAa,SAACxF,GACV,EAAKF,SAAL,eACKE,EAAM5B,OAAOJ,KAAQgC,EAAM5B,OAAOgC,SA7BxB,EAiCnBqF,aAAe,WACX,IAAIC,EAAa,CACblD,UAAW,EAAKlJ,MAAMkJ,UACtBC,SAAU,EAAKnJ,MAAMmJ,SACrBC,MAAO,EAAKpJ,MAAMoJ,MAClBC,SAAU,EAAKrJ,MAAMqJ,SACrBC,MAAO,EAAKtJ,MAAMsJ,MAClBC,SAAU,EAAKvJ,MAAMuJ,UAEzB,EAAKzD,MAAMqG,aAAaC,GACxB,EAAKC,wBACLC,YAAW,WACwB,MAA3B,EAAKxG,MAAM/G,KAAKyG,QAChB,EAAKoB,iBAAgB,IAErB,EAAKJ,SAAS,CAAC,WAAa,IAC5B,EAAKA,SAAS,CAAC,MAAU,sDACzBpC,QAAQC,IAAI,EAAKrE,MAAMd,UAE5B,MApDY,EAuDnBmN,sBAAwB,WACpB,EAAK7F,UAAS,kBAAM,EAAKT,iBAtDzB,EAAK/F,MAAQ,EAAK+F,aAFH,E,4DAiBHC,GACZiB,KAAKT,SAAS,CAAER,mB,+BAyCV,IAAD,OACL,OACI,oCACKiB,KAAKjH,MAAMiM,WAAahF,KAAKjH,MAAMd,OAChC,kBAAC,KAAD,CAAOqN,QAAQ,SAASC,QAAS,kBAAM,EAAKH,yBAAyBI,aAAW,EAACjH,QAASyB,KAAKjH,MAAMd,OAChG+H,KAAK/H,OAId,kBAAC,KAAD,CACIgI,UAAQ,EACRC,QAASF,KAAKjH,MAAMgG,aACpBoB,SAAYH,KAAKd,kBACjBkB,OAAQ,CACJ,kBAAC,IAAD,CAAK7D,QAAS,gBACV,kBAAC,IAAD,CAAMpD,OAAK,EAACC,GAAI,KACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,8BAHZ,IAOQ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMD,OAAK,EAACC,GAAM,UACd,kBAAC,IAAD,CAAQ3B,KAAM,WAAd,wBASpB,kBAAC,IAAD,CAAK8E,QAAS,UACV,2BACI,kBAAC,IAAD,CAAO7C,MAAO,GAAIK,SAAS,EAAOzC,MAAO,CAACsC,QAAS,WAC5CI,IAAKC,QAGpB,kBAAC,IAAD,CAAKsC,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,qCAEJ,kBAAC,IAAD,CAAKP,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,qBAEJ,kBAAC,IAAD,CAAKP,QAAS,UACV,kBAACC,EAAA,EAAD,CAAM/E,KAAM,aAAZ,yCAIR,kBAAC,KAAD,CACI4I,SAAU,CACNC,KAAM,IAEVC,WAAY,CACRD,KAAM,IAEVhJ,MAAO,CAACoC,MAAM,MAGd,kBAAC,KAAK+G,KAAN,CACIhD,KAAK,QACLiD,MAAM,SACNC,MAAO,CACH,CACIlJ,KAAM,QACN8G,QAAS,0BAEb,CACIuC,UAAU,EACVvC,QAAS,gCAIjB,kBAAC,KAAD,CAAOyC,YAAY,QAAQvD,KAAK,QAAQjE,UAAU,eAC3CqG,MAAOG,KAAKjH,MAAMoJ,MAAOxE,SAAUqC,KAAKiF,cAInD,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,WACLiD,MAAM,OACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,2BACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,CAAOsH,YAAY,YAAYvD,KAAK,WAAWjE,UAAU,eAClDqG,MAAOG,KAAKjH,MAAMmJ,SAAUvE,SAAUqC,KAAKiF,cAItD,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,YACLiD,MAAM,UACNC,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,8BACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,CAAOsH,YAAY,aAAavD,KAAK,YAAYjE,UAAU,eACpDqG,MAAOG,KAAKjH,MAAMkJ,UAAWtE,SAAUqC,KAAKiF,cAGvD,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,SACLiD,MAAM,SACNC,MAAO,CACH,CACIpC,QAAS,8BACTwC,YAAY,IAGpBzJ,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,CAAOsH,YAAY,SAASvD,KAAK,SAASjE,UAAU,eAC7CqG,MAAOG,KAAKjH,MAAMuJ,SAAU3E,SAAUqC,KAAKiF,cAKtD,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,QACLiD,MAAM,gBACNC,MAAO,CACH,CACIG,UAAU,EACVF,IAAK,EACLC,IAAK,EACLtC,QAAS,yCAGjBjH,MAAO,CAACoC,MAAM,MAGd,kBAAC,KAAD,CAAOjC,KAAM,SACN+L,OAAO,OACPxC,YAAY,QAAQvD,KAAK,QAAQjE,UAAU,eAC3CqG,MAAOG,KAAKjH,MAAMsJ,MAAO1E,SAAUqC,KAAKiF,cAInD,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,WACLiD,MAAM,SACNC,MAAO,CACH,CACIG,UAAU,EACVF,IAAK,EACLrC,QAAS,8BAGjBjH,MAAO,CAACoC,MAAM,KACd+L,aAAW,GAEX,kBAAC,KAAMC,SAAP,CAAgB1E,YAAY,WAAWvD,KAAK,WAAWjE,UAAU,eACjDqG,MAAOG,KAAKjH,MAAMqJ,SAAUzE,SAAUqC,KAAKiF,cAG/D,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,UACLiD,MAAM,uBACNiF,aAAc,CAAC,YACfF,aAAW,EACX9E,MAAO,CACH,CACIG,UAAU,EACVvC,QAAS,2BAEb,gBAAEqH,EAAF,EAAEA,cAAF,MAAsB,CAClBC,UADkB,SACRC,EAAGjG,GACT,OAAKA,GAAS+F,EAAc,cAAgB/F,EAIrCkG,QAAQC,OAAO,IAAIC,MAAM,wBAHrBF,QAAQG,cAO/B5O,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAMgM,SAAP,CAAgB1E,YAAY,mBAAmBvD,KAAK,WAAWjE,UAAU,eACzDqG,MAAOG,KAAKjH,MAAMqJ,SAAUzE,SAAUqC,KAAKiF,cAI/D,kBAAC,KAAKxE,KAAN,CACIhD,KAAK,YACL0I,cAAc,UACdxF,MAAO,CACH,CACIkF,UAAW,SAACC,EAAGjG,GAAJ,OACPA,EAAQkG,QAAQG,UAAYH,QAAQC,OAAO,IAAIC,MAAM,+BAGjE3O,MAAO,CAACoC,MAAM,MAEd,kBAAC,KAAD,yBAEqB,uBAAG0M,KAAK,IAAR,sCAIzB,kBAAC,KAAK3F,KAAN,KACI,kBAAC,IAAD,CAAQhJ,KAAK,UAAU0J,SAAS,SAAU5H,QAASyG,KAAKkF,cAAxD,mB,GAhRO9D,aAsShBC,gBAZS,SAAAtI,GACpB,MAAM,CACFjB,KAAKiB,EAAMjB,SAIQ,SAAAQ,GACvB,MAAM,CACF4M,aAAc,SAACC,GAAD,OAAgB7M,EvB5SV,SAAC6M,GAAD,8CAAgB,WAAO7M,GAAP,eAAA+N,EAAA,6DACxC/N,EAASV,KAD+B,kBAGbyC,IAAMlC,KANhB,sCAMmCgN,GAHZ,cAG9B3D,EAH8B,OAIpClJ,EAAST,EAAiB2J,EAAStF,OAJC,kBAK7B6J,QAAQG,QAAQ1E,EAAStF,OALI,uCAOpC5D,EAASN,EAAY,KAAMuG,UAPS,kBAQ7BwH,QAAQC,OAAR,OAR6B,yDAAhB,sDuB4SmBd,CAAaC,QAI7C9D,CAA6CoC,YAAWsB,K,qBCtRxDuB,GAxBE,WACb,OACI,oCACI,kBAAC,IAAD,CAAQhP,MAAO,CAAEuC,OAAO,QAAQ0M,gBAAgB,OAAD,OAAS5M,KAAT,OAEvC,kBAAC,IAAD,KACI,wBAAIrC,MAAO,CAAC,YAAY,GACpBC,WAAW,OACXqC,QAAQ,OACRP,MAAM,YAHV,wBAQR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKH,OAAQ,GACT,kBAAC,GAAD,WCblBsN,I,0DACF,WAAY3H,GAAQ,IAAD,8BACf,cAAMA,IAIVC,aAAe,CACXqD,MAAO,GACPC,SAAU,GACVnK,MAAO,GACP+M,WAAW,EACXjG,cAAc,GAVC,EAkBnB0H,iBAAmB,SAAChH,GAChB,EAAKF,SAAL,eACKE,EAAM5B,OAAOJ,KAAOgC,EAAM5B,OAAOgC,SApBvB,EAwBnB6G,aAAe,SAAC7H,GACZ,IAAIsG,EAAa,CACbhD,MAAO,EAAKpJ,MAAMoJ,MAClBC,SAAU,EAAKrJ,MAAMqJ,UAEzB,EAAKvD,MAAM8H,iBAAiBxB,GAC5BE,YAAW,WACP,GAAI,EAAKxG,MAAMhG,KAAKH,WAChB,OAAO,EAAKiH,iBAAgB,GAE5B,EAAKiH,iBACL,EAAKrH,SAAS,CAAC,WAAa,IAC5B,EAAKA,SAAS,CAAC,MAAS,iCAE7B,MAtCY,EAyClBL,kBAAoB,WACjB/B,QAAQC,IAAI,yBACX,EAAKyB,MAAM8D,QAAQC,KAAK,MA3CV,EA8CnBgE,eAAiB,WACb,EAAKrH,UAAS,kBAAM,EAAKT,iBA7CzB,EAAK/F,MAAQ,EAAK+F,aAFH,E,4DAaHC,GACZiB,KAAKT,SAAS,CAACR,mB,+BAoCT,IAAD,OACL,OACI,6BACKiB,KAAKjH,MAAMiM,WAAahF,KAAKjH,MAAMd,OAChC,kBAAC,KAAD,CAAOqN,QAAQ,SAASC,QAAS,kBAAM,EAAKqB,kBAAmBpB,aAAW,EAACjH,QAASyB,KAAKjH,MAAMd,OAC1F+H,KAAK/H,OAId,kBAAC,KAAD,CACIgI,UAAQ,EACRE,SAAYH,KAAKd,kBACjBgB,QAASF,KAAKjH,MAAMgG,aACpBqB,OAAQ,CACJ,kBAAC,IAAD,CAAK7D,QAAS,gBACV,kBAAC,IAAD,CAAMpD,OAAK,EAACC,GAAI,KACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,8BAHZ,IAMI,kBAAC,IAAD,CAAMD,OAAK,EAACC,GAAI,qBACZ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ3B,KAAM,WAAd,2BAMhB,oCACI,kBAAC,IAAD,CAAK8E,QAAS,UACV,2BACI,kBAAC,IAAD,CAAO7C,MAAO,GAAIK,SAAS,EAAOzC,MAAO,CAACsC,QAAS,WAC5CI,IAAKC,QAGpB,kBAAC,IAAD,CAAKsC,QAAS,UACV,kBAACM,EAAA,EAAD,CAAOC,MAAO,GAAd,qBAEJ,kBAAC,IAAD,CAAKP,QAAS,UACV,kBAACC,EAAA,EAAD,CAAM/E,KAAM,aAAZ,0CAKZ,kBAAC,KAAD,KAEI,kBAAC,KAAKgJ,KAAN,CACIhD,KAAK,QACLkD,MAAO,CAAC,CACJG,UAAU,EACVvC,QAAS,6BAGbjH,MAAO,CAACoC,MAAO,MAEf,kBAAC,KAAD,CACIsH,YAAY,QACZvD,KAAK,QACLjE,UAAU,eACVqG,MAAOG,KAAKjH,MAAMoJ,MAClBxE,SAAUqC,KAAKyG,oBAIvB,kBAAC,KAAKhG,KAAN,CACIhD,KAAK,WACLkD,MAAO,CAAC,CACJG,UAAU,EACVvC,QAAS,iCAIb,kBAAC,KAAMmH,SAAP,CACIjI,KAAK,WACLjE,UAAU,eACV/B,KAAK,WACLuJ,YAAY,WACZnB,MAAOG,KAAKjH,MAAMqJ,SAClBzE,SAAUqC,KAAKyG,oBAIvB,kBAAC,KAAKhG,KAAN,KACI,kBAAC,KAAKA,KAAN,CAAWhD,KAAK,WAAW0I,cAAc,UAAUU,SAAO,GACtD,kBAAC,KAAD,qBAIJ,uBAAGrN,UAAU,oBAAoB4M,KAAK,IAAtC,oBAKJ,kBAAC,KAAK3F,KAAN,KACI,kBAAC,IAAD,CAAQhJ,KAAK,UACL0J,SAAS,SACT3H,UAAU,oBACVD,QAASyG,KAAK0G,cAHtB,WASJ,kBAAC,KAAKjG,KAAN,WACO,kBAAC,IAAD,CAAMtH,OAAK,EAACC,GAAI,aAAa,uBAAGgN,KAAK,IAAR,yB,GA3JhChF,cAiLTC,gBAZS,SAAAtI,GACpB,MAAO,CACHF,KAAME,EAAMF,SAIO,SAAAP,GACvB,MAAO,CACHqO,iBAAkB,SAACxB,GAAD,OAAgB7M,ErBrLV,SAAC6M,GAAD,8CAAgB,WAAO7M,GAAP,qBAAA+N,EAAA,6DAC5C/N,EAAS,CACLb,KCLqB,kBDGmB,SAMpC0K,EAAQgD,EAAWhD,MACnBC,EAAW+C,EAAW/C,SAPc,SASjB/H,IAAMlC,KAAK,0CAA2C,CACzEgK,MAAOA,EACPC,SAAUA,IAX0B,cASlCZ,EATkC,OAapCpH,EAAQoH,EAAStF,KAAK9B,MAC1B7B,aAAakG,QAAQ,WAAYrE,GACjC9B,EAASG,EAAQ,CAACqO,SAAUtF,EAAStF,KAAKuB,KAAM/E,YAAY,KAC5DH,aAAakG,QAAQ,aAAc0D,GAhBK,kBAiBjC4D,QAAQG,QAAQ1E,EAAStF,OAjBQ,yCAmBxC5D,EAASK,KAnB+B,kBAoBjCoN,QAAQC,OAAR,OApBiC,0DAAhB,sDqBqLmBW,CAAiBxB,QAIrD9D,CAA6CoC,YAAW+C,KC9JxDO,GAzBD,WAEV,OACI,oCACI,kBAAC,IAAD,CAAQzP,MAAO,CAACuC,OAAO,UACnB,kBAAC,IAAD,KACI,wBAAKvC,MAAO,CAAC,YAAY,GACrBC,WAAW,QACXqC,QAAQ,OACRP,MAAM,YAHV,WASJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKH,OAAQ,GACT,kBAAC,GAAD,W,8BCUT8N,GA9BE,SAAC1I,GAAS,IAAD,EACE1C,mBAAS,MADX,mBACfM,EADe,KACT+K,EADS,OAEYrL,oBAAS,GAFrB,mBAEfsL,EAFe,KAEJC,EAFI,OAGIvL,mBAAS,MAHb,mBAGf3D,EAHe,KAGRmP,EAHQ,KA2BtB,OAtBArL,qBAAU,WACNsJ,YAAW,WACPpH,MAAMK,GACDrC,MAAK,SAAAyG,GACF,IAAKA,EAAI2E,GACL,MAAMpB,MAAM,8CAEhB,OAAOvD,EAAIrE,UAEdpC,MAAK,SAAAC,GACFiL,GAAa,GACbF,EAAQ/K,GACRkL,EAAS,SAEZ1I,OAAM,SAAAC,GAEHwI,GAAa,GACbC,EAASzI,EAAIJ,cAEtB,OACJ,IAEI,CAAErC,OAAMgL,YAAWjP,U,mBC+IfqP,GA/JK,WAEhB,IAAMzO,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMF,QACnCgC,EAAM0M,cAAN1M,GAHe,EAIWmM,GAAS,qCAAD,OAAsCnM,IAAxEqB,EAJe,EAIfA,KAAMjE,EAJS,EAITA,MAAOiP,EAJE,EAIFA,UAJE,EAKgBtL,oBAAS,GALzB,mBAKf4L,EALe,KAKFC,EALE,OAMU7L,mBAAS,IANnB,mBAMf8L,EANe,KAMLC,EANK,KA4ChBrO,EACF,oCACA,kBAAC,IAAD,CAAKiD,QAAQ,eAAejF,MAAO,CAACsQ,UAAW,KAAMC,aAAc,OAC/D,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQtO,QAAS,kBAdL9B,EAc2B,eAb/CqQ,KAAarQ,GAAM,CACf8G,QAAS,qBACTS,YACI,mEACJ+I,SAAU,MALM,IAAAtQ,IAeR,kBAAC2D,EAAA,EAAD,CAAcC,IAAI,MAAMC,aAAa,YADzC,oBAKJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQ/B,QAtCA,SAACqE,GACjBvD,IAAM2B,IAAN,0CAA6CE,EAAK+C,SAChDhD,MAAK,SAACyG,GACJ,IAAI5K,EAAO4K,EAAIxG,KACfyL,EAAY,CACRK,MAAOlQ,EAAKmK,UACZC,SAAUpK,EAAKoK,SACfC,MAAOrK,EAAKqK,MACZC,SAAUtK,EAAKsK,SACfC,MAAOvK,EAAKuK,MACZC,SAAUxK,EAAKwK,WAEnBmF,GAAgBD,GAChBrK,QAAQC,IAAI,WAAamF,KAAKC,UAAU1K,OACzC4G,OAAM,SAACzG,GACNkF,QAAQC,IAAInF,EAAMuJ,eAwBV,kBAACjG,EAAA,EAAD,CAAgBF,IAAI,OAAOC,aAAa,YAD5C,qBAKJ,kBAAC,IAAD,KAEIkM,EAEI,6BACI,kBAAC,IAAD,KACI,uCAAaE,EAASrF,QAG1B,kBAAC,IAAD,KACI,sCAAYqF,EAASvF,QAGzB,kBAAC,IAAD,KACI,oCAAUuF,EAASpF,YAK3B,uCAOVrJ,EACF,yBAAK3B,MAAO,CAACsQ,UAAW,KAAMC,aAAc,OACxC,kBAAC,IAAD,KACI,kBAACrL,EAAA,EAAD,CAAM/E,KAAK,aAAX,2EAEJ,kBAAC,IAAD,CAAK8E,QAAQ,eAAejF,MAAO,CAACsQ,UAAW,OAC3C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMzO,OAAK,EAACC,GAAI,UACZ,kBAAC,IAAD,CAAQ3B,KAAK,QAAb,mBAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM0B,OAAK,EAACC,GAAI,aACZ,kBAAC,IAAD,CAAQ3B,KAAK,QAAb,wBAQpB,OACI,6BACKyP,GACG,kBAAC,IAAD,CAAK3K,QAAQ,SAASjF,MAAO,CAACuC,OAAQ,UAClC,kBAAC,IAAD,CAAKX,OAAQ,GAAIoH,KAAM,EAAGhJ,MAAO,CAACsC,QAAS,SACvC,yBAAK0C,MAAO,UAAU,kBAAC,KAAD,CAAMhF,MAAO,CAACoC,MAAM,QAASuO,IAAK,eAInEhQ,GAAS,6BAAMA,GAEfiE,GACD,kBAAC,IAAD,CAAKK,QAAQ,eAAeD,MAAM,UAC9B,kBAAC,IAAD,CAAKgE,KAAM,GAAIhJ,MAAO,CAACsC,QAAS,SAC5B,6BACI,kBAAC,YAAD,KACI,6BACI,yBAAKqB,IAAI,GAAGjB,IAAKkC,EAAKhB,YAMtC,kBAAC,IAAD,CAAK5D,MAAO,CAACsC,QAAS,OAAQiO,aAAc,OAAQvH,KAAM,IACtD,kBAAC,IAAD,SAAM,kBAACzD,EAAA,EAAD,KAAQX,EAAKV,OAAnB,KACA,kBAAC,IAAD,KACI,kBAAC0M,GAAA,EAAD,KACKhM,EAAK8C,cAIbnG,EAAKH,WAAaY,EAAYL,EAG/B,kBAAC,IAAD,CAAKsD,QAAQ,OACT,kBAACC,EAAA,EAAD,CAAM/E,KAAK,aAAX,cAAmCyE,EAAK+C,SAE5C,kBAAC,IAAD,CAAK1C,QAAQ,OACT,kBAACC,EAAA,EAAD,CAAM/E,KAAK,aAAayE,EAAKiM,cClHtCC,GA1BH,WACR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,GAAD,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,QAASC,UAAWrO,IAChC,kBAAC,IAAD,CAAOoO,KAAK,IAAInP,OAAK,EAACoP,UAAWtL,IACjC,kBAAC,IAAD,CAAOqL,KAAK,oBAAqBC,UAAW9G,KAC5C,kBAAC,IAAD,CAAO6G,KAAK,YAAaC,UAAWjC,KACpC,kBAAC,IAAD,CAAOgC,KAAK,aAAcC,UAAWhE,KACrC,kBAAC,IAAD,CAAO+D,KAAK,SAAUC,UAAWC,KACjC,kBAAC,IAAD,CAAOF,KAAK,aAAcC,UAAWjB,UCnBrCmB,QACW,cAA7BtJ,OAAOC,SAASsJ,UAEe,UAA7BvJ,OAAOC,SAASsJ,UAEhBvJ,OAAOC,SAASsJ,SAASC,MACvB,2D,iCChBA7J,GAAe,CACjB8J,MAAO,GACP3Q,MAAO,IA6BI4Q,GA1BC,WAAmC,IAAlC9P,EAAiC,uDAAzB+F,GAAcgK,EAAW,uCAC9C,OAAQA,EAAOrR,MACX,I9BToB,e8BUhB,OAAO,gBACAsB,GAEX,I9BZoB,e8BahB,MAAO,CACH6P,MAAOE,EAAO/Q,QACdE,MAAO,IAEf,I9Bf0B,qB8BgBtB,MAAO,CACHsG,QAASuK,EAAO/Q,QAChBE,MAAO,IAEf,I9BrBoB,e8BsBhB,MAAO,CACH2Q,MAAO,GACP3Q,MAAO6Q,EAAO/Q,SAEtB,QACI,OAAOgB,IC3Bb+F,GAAe,CACjBgI,SAAU,GACVpO,WAAY,IAyBDmQ,GAtBC,WAAmC,IAAlC9P,EAAiC,uDAAzB+F,GAAcgK,EAAW,uCAC9C,OAAQA,EAAOrR,MACX,I3BTqB,gB2BarB,I3BZsB,iB2BalB,OAAO,gBACAsB,GAEX,I3Bfe,U2BmBf,I3BlBe,U2BmBX,MAAO,CACHL,WAAYoQ,EAAO/Q,SAE3B,QACI,OAAOgB,ICxBb+F,GAAe,CACjB3G,KAAM,GACNF,MAAO,IA2BI4Q,GAxBC,WAAmC,IAAlC9P,EAAiC,uDAAzB+F,GAAcgK,EAAW,uCAC9C,OAAQA,EAAOrR,MACX,I9BTyB,oB8BUzB,I9BT0B,qB8BU1B,I9BT2B,sB8BU3B,I9BT2B,sB8BUvB,OAAO,gBACAsB,GAEX,I9BZoB,e8BahB,MAAO,CACHZ,KAAM2Q,EAAO/Q,QACbE,MAAO,IAEf,I9BhBoB,e8BiBhB,MAAO,CACHE,KAAM,GACNF,MAAO6Q,EAAO/Q,SAEtB,QACI,OAAOgB,IChBJgQ,GANMC,aAAgB,CACjClR,KAAMmR,GACN9Q,KAAM+Q,GACNrQ,KAAMsQ,KCDKC,GAHDC,aAAYN,GAAcO,aAAgBC,OCIxDC,IAASC,OACL,kBAAC,IAAD,CAAUL,MAAOA,IAAO,kBAAC,GAAD,OACxBM,SAASC,eAAe,SNyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7N,MAAK,SAAA8N,GACJA,EAAaC,gBAEdtL,OAAM,SAAAzG,GACLkF,QAAQlF,MAAMA,EAAMsG,a,mBOzI5BpH,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.81dda063.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/back3.7404a119.jpg\";","import React from \"react\";\r\nimport {Button} from 'antd';\r\nimport {UserOutlined} from \"@ant-design/icons\";\r\n\r\nconst CascadUser = () => {\r\n\r\n    return (\r\n\r\n        <Button style={{marginLeft: '10px'}} size={'large'} type={'default'} shape={'circle'}>\r\n            <UserOutlined/>\r\n        </Button>\r\n\r\n\r\n    );\r\n}\r\n\r\nexport default CascadUser;","import * as UT from \"./userTypes\";\r\nimport axios from \"axios\";\r\n\r\nconst REGISTER_URL = \"http://localhost:8080/user/register\";\r\n\r\n\r\nexport const registerUser = (userObject) => async (dispatch) => {\r\n    dispatch(userRequest());\r\n    try {\r\n        const response = await axios.post(REGISTER_URL, userObject);\r\n        dispatch(userSavedSuccess(response.data));\r\n        return Promise.resolve(response.data);\r\n    } catch (error) {\r\n        dispatch(userFailure(error.message));\r\n        return Promise.reject(error);\r\n    }\r\n};\r\n\r\nconst userRequest = () => {\r\n    return {\r\n        type: UT.USER_REQUEST,\r\n    };\r\n};\r\n\r\nconst userSavedSuccess = (user) => {\r\n    return {\r\n        type: UT.USER_SAVED_SUCCESS,\r\n        payload: user,\r\n    };\r\n};\r\n\r\nconst userSuccess = (users) => {\r\n    return {\r\n        type: UT.USER_SUCCESS,\r\n        payload: users,\r\n    };\r\n};\r\n\r\nconst userFailure = (error) => {\r\n    return {\r\n        type: UT.USER_FAILURE,\r\n        payload: error,\r\n    };\r\n};","export const USER_REQUEST = \"USER_REQUEST\";\r\nexport const USER_SUCCESS = \"USER_SUCCESS\";\r\nexport const USER_FAILURE = \"USER_FAILURE\";\r\nexport const USER_SAVED_SUCCESS = \"USER_SAVED_SUCCESS\";","import * as PT from \"./postTypes\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport const savePost = (post) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PT.SAVE_POST_REQUEST,\r\n        });\r\n        axios\r\n            .post(\"http://localhost:8080/posts\", post)\r\n            .then((response) => {\r\n                dispatch(postSuccess(response.data));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(postFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const fetchPost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PT.FETCH_POST_REQUEST,\r\n        });\r\n        axios\r\n            .get(\"http://localhost:8080/posts/\" + postId)\r\n            .then((response) => {\r\n                dispatch(postSuccess(response.data));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(postFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const updatePost = (post) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PT.UPDATE_POST_REQUEST,\r\n        });\r\n        axios\r\n            .put(\"http://localhost:8080/posts\", post)\r\n            .then((response) => {\r\n                dispatch(postSuccess(response.data));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(postFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: PT.DELETE_POST_REQUEST,\r\n        });\r\n        axios\r\n            .delete(\"http://localhost:8080/posts/\" + postId)\r\n            .then((response) => {\r\n                dispatch(postSuccess(response.data));\r\n            })\r\n            .catch((error) => {\r\n                dispatch(postFailure(error));\r\n            });\r\n    };\r\n};\r\n\r\nconst postSuccess = (post) => {\r\n    return {\r\n        type: PT.POST_SUCCESS,\r\n        payload: post,\r\n    };\r\n};\r\n\r\nconst postFailure = (error) => {\r\n    return {\r\n        type: PT.POST_FAILURE,\r\n        payload: error,\r\n    };\r\n};\r\n\r\nexport const fetchCategories = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: PT.POST_CATEGORIES\r\n        })\r\n    }\r\n}","export const SAVE_POST_REQUEST = \"SAVE_POST_REQUEST\";\r\nexport const FETCH_POST_REQUEST = \"FETCH_POST_REQUEST\";\r\nexport const UPDATE_POST_REQUEST = \"UPDATE_POST_REQUEST\";\r\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\r\nexport const POST_SUCCESS = \"POST_SUCCESS\";\r\nexport const POST_FAILURE = \"POST_FAILURE\";\r\n\r\nexport const POST_CATEGORIES = \"POST_CATEGORIES\";\r\n","import * as AT from './authTypes'\r\nimport axios from \"axios\";\r\n\r\nexport const authenticateUser = (userObject) => async (dispatch) => {\r\n    dispatch({\r\n        type: AT.LOGIN_REQUEST\r\n    });\r\n\r\n    try {\r\n        let email = userObject.email;\r\n        let password = userObject.password;\r\n\r\n        const response = await axios.post(\"http://localhost:8080/user/authenticate\", {\r\n            email: email,\r\n            password: password\r\n        });\r\n        let token = response.data.token;\r\n        localStorage.setItem('jwtToken', token);\r\n        dispatch(success({username: response.data.name, isLoggedIn: true}));\r\n        localStorage.setItem(\"user_email\", email);\r\n        return Promise.resolve(response.data);\r\n    } catch (error) {\r\n        dispatch(failure());\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\nexport const logoutUser = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: AT.LOGOUT_REQUEST\r\n        });\r\n        localStorage.removeItem('jwtToken');\r\n        localStorage.removeItem('user_email');\r\n        dispatch(success(false));\r\n    }\r\n}\r\n\r\nconst success = isLoggedIn => {\r\n    return {\r\n        type: AT.SUCCESS,\r\n        payload: isLoggedIn\r\n    };\r\n};\r\n\r\n\r\nconst failure = isLoggedIn => {\r\n    return {\r\n        type: AT.FAILURE,\r\n        payload: isLoggedIn\r\n    };\r\n};\r\n\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const SUCCESS = 'SUCCESS';\r\nexport const FAILURE = 'FAILURE';\r\n","import React from \"react\";\r\nimport {Header} from \"antd/es/layout/layout\";\r\nimport {Row, Col, Image,  Button, Affix} from \"antd\";\r\nimport {Link} from \"react-router-dom\";\r\nimport CascadUser from \"./CascadUser\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {logoutUser} from \"../service\";\r\nimport logo from \"../assets/logo2.png\";\r\n\r\n\r\nconst HeaderApp  = () => {\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const logout = () => {\r\n        dispatch(logoutUser());\r\n    };\r\n\r\n        const guestLinks = (\r\n            <>\r\n                <Col offset={17}>\r\n                <Link exact to={\"/login\"}>\r\n                    <Button type=\"text\">\r\n                        Log In\r\n                    </Button>\r\n                </Link>\r\n\r\n                    <Link exact to={\"/register\"}>\r\n                        <Button type=\"text\" style={{color:'#1890ff'}} >\r\n                            Register\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </>\r\n        );\r\n\r\n        const userLinks = (\r\n            <>\r\n                <Col offset={17}>\r\n                    <Link exact to=\"/MyProfile\"><CascadUser/></Link>\r\n                </Col>\r\n\r\n\r\n                <Col style={{marginLeft :'5px'} }>\r\n                    <Link exact to={\"/\"} onClick={logout}>\r\n                        <Button type=\"text\" style={{color:'#1890ff'}}>\r\n                            Log Out\r\n                        </Button>\r\n                    </Link>\r\n                </Col>\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <div className={'MyHeader'}>\r\n                <Affix offsetTop={0}>\r\n                    <Header style={{\r\n                        width: '100%', background: 'rgb(230, 234, 255)', padding: '0px 0px', height: '60px'\r\n                    }}>\r\n\r\n                        <Row>\r\n                            <Col offset={1}>\r\n                                <Link exact to={'/'}><Image.PreviewGroup>\r\n                                    <Image width={70} preview={false} style={{padding: '5px 5px'}}\r\n                                           src={logo}/>\r\n                                </Image.PreviewGroup></Link>\r\n                            </Col>\r\n                            <Col>\r\n                                <Link exact to={'/'}><h1 className={'GiveIt'}>GiveIt</h1></Link>\r\n                            </Col>\r\n                            {auth.isLoggedIn ? userLinks : guestLinks}\r\n                        </Row>\r\n                    </Header>\r\n                </Affix>\r\n            </div>\r\n\r\n        );\r\n}\r\n\r\n\r\nexport default HeaderApp;\r\n","\r\nimport React from \"react\";\r\n\r\nconst chat = () => {\r\n    return (\r\n         <div>\r\n             <h3>Chat</h3>\r\n         </div>\r\n    );\r\n}\r\n\r\nexport default chat;","import axios from \"axios\";\r\n\r\nconst authToken = (token) => {\r\n    if (token){\r\n        axios.defaults.headers.common['Authorization'] = `${token}`;\r\n    }else {\r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n}\r\n\r\nexport default authToken;","import React from 'react';\r\n\r\nimport {Card} from 'antd';\r\nimport {HeartTwoTone, MessageTwoTone, UserOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\nconst CardApp = ({product}) => (\r\n    <Link exact to={`posts/${product.id}`}>\r\n        <div className={'MyCard'}>\r\n            <Card\r\n                hoverable\r\n                style={{width: 240, margin: '10px'}}\r\n                cover={\r\n                    <img\r\n                        alt=\"example\"\r\n                        style = {{height: \"290px\", width: \"240px\"}}\r\n                        src={product.photo}/>\r\n                }\r\n                actions={[\r\n                    <HeartTwoTone key=\"fav\" twoToneColor=\"#eb2f96\"/>,\r\n                    <MessageTwoTone key=\"mess\" twoToneColor=\"#1890ff\"/>,\r\n                ]}\r\n            >\r\n\r\n                <Meta\r\n                    title={product.title}\r\n                    avatar={<UserOutlined/>}\r\n                    category={product.category}\r\n                />\r\n            </Card>\r\n        </div>\r\n    </Link>\r\n);\r\n\r\nexport default CardApp;","import CardApp from \"../components/CardApp\";\r\nimport {Empty, Row, Space} from \"antd\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport Text from \"antd/es/typography/Text\";\r\n\r\nconst Filter = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/posts\").then(({data}) => setProducts(data))\r\n    }, [])\r\n\r\n    const menuKey = localStorage.getItem(\"menuKey\");\r\n\r\n    const noProduct = (\r\n        <Space align={\"center\"} style={{height:\"78vh\"}}>\r\n            <Row justify={\"center\"}>\r\n                <Empty/>\r\n            </Row>\r\n            <Row justify={\"center\"}>\r\n                <Text type={\"secondary\"}>Nu sunt produse in categoria: {menuKey}</Text>\r\n            </Row>\r\n        </Space>\r\n\r\n    )\r\n\r\n    const allProduct = (\r\n        <>\r\n            <Row style={{padding: '50px', marginLeft: 100}}>\r\n            {\r\n                menuKey == \" \"\r\n                    ?\r\n                    products.map((p) => <CardApp product={p}/>)\r\n                    :\r\n                    noProduct\r\n            }\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n    const yesProduct = (\r\n        <>\r\n            <Row justify={\"center\"}>\r\n                <Title level={4}>Vezi produsele din categoria: {menuKey}</Title>\r\n            </Row>\r\n            <Row style={{padding: '50px', marginLeft: 100}}>\r\n                {\r\n                        products.filter((products) => products.category == menuKey)\r\n                            .map((p) => <CardApp product={p}/>)\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n\r\n            {\r\n                products.filter((products) => products.category === localStorage.getItem(\"menuKey\")).length === 0\r\n                    ?\r\n                    allProduct : yesProduct\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import React, {useEffect, useState} from 'react';\r\nimport {Layout} from \"antd\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport authToken from \"../utils/authToken\";\r\nimport Filter from \"./Filter\";\r\nimport {logoutUser} from \"../service\";\r\n\r\nconst Home = () => {\r\n\r\n    if (localStorage.jwtToken) {\r\n        authToken(localStorage.jwtToken);\r\n    }\r\n\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    console.log(auth.isLoggedIn);\r\n    if (!auth.isLoggedIn && localStorage.jwtToken) {\r\n        dispatch(logoutUser());\r\n    }\r\n\r\n\r\n    const [products, setProducts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/posts\").then(({data}) => setProducts(data))\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Layout>\r\n                <Filter/>\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Home;","import React, { useState } from 'react'\r\nimport {Button, Input, Row, message, Image} from \"antd\";\r\n\r\n\r\nconst UploadPhoto = () => {\r\n\r\n    const [image, setImage] = useState(\"\");\r\n    const [photo, setPhoto] = useState(\"\");\r\n    const [status] = useState(\"\");\r\n\r\n\r\n\r\n    const uploadImage = () => {\r\n        const data = new FormData()\r\n        data.append(\"file\", image)\r\n        data.append(\"upload_preset\", \"giveit\")\r\n        data.append(\"cloud_name\",\"dgwpw3bpf\")\r\n        fetch(\"  https://api.cloudinary.com/v1_1/dgwpw3bpf/image/upload\",{\r\n            method:\"post\",\r\n            body: data\r\n        })\r\n            .then(resp => resp.json())\r\n            .then(data => {\r\n                setPhoto(data.url)\r\n                message.success(\"Imaginea a fost incarcata cu success!\").then(r => message);\r\n                localStorage.setItem(\"photo_url\", data.url)\r\n\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n                message.error(\"Ups, ceva a mers nu cum trebuie\").then(r => message);\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Row>\r\n                <Input name={\"photo\"}\r\n                       accept=\"image/*\"\r\n                       type=\"file\"\r\n                       onChange= {(e)=> setImage(e.target.files[0])}>\r\n                </Input>\r\n            </Row>\r\n            <Row justify={\"center\"} style={{padding:\"3%\"}}>\r\n                <Button type={'primary'} onClick={uploadImage}>Incarca imaginea</Button>\r\n            </Row>\r\n            <Row>\r\n                <h1>Imaginea incarcata va apre aici</h1>\r\n                <Image width={100} src={photo}/>\r\n            </Row>\r\n\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default UploadPhoto ;","import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\nimport {Form, Button, Input, Select, Modal, Image, Row} from \"antd\";\r\nimport {savePost} from \"../service\";\r\nimport {connect} from \"react-redux\";\r\nimport {Option} from \"antd/es/mentions\";\r\nimport UploadPhoto from \"./UploadPhoto\";\r\nimport logo from \"../assets/logo2.png\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst normFile = (e: any) => {\r\n\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n    return e && e.fileList;\r\n};\r\n\r\n\r\nclass Announcement extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n        this.postChange = this.postChange.bind(this);\r\n        this.submitPost = this.submitPost.bind(this);\r\n    }\r\n\r\n    initialState = {\r\n        modalVisible: false,\r\n        id: \"\",\r\n        description: \"\",\r\n        category: \"Mobila si interior\",\r\n        photo: \"\",\r\n        userid: \"\"\r\n    };\r\n\r\n    setModalVisible(modalVisible) {\r\n        this.setState({ modalVisible });\r\n    }\r\n\r\n    handleCancelModal = () => {\r\n        console.log('Clicked cancel button');\r\n        window.location.replace(\"/\");\r\n    };\r\n\r\n\r\n    resetPost = () => {\r\n        this.setState(() => this.initialState);\r\n    }\r\n\r\n    submitPost = event => {\r\n        event.preventDefault();\r\n\r\n        const post = {\r\n            title:  this.state.title,\r\n            description:  this.state.description,\r\n            category: this.state.category,\r\n            photo: localStorage.getItem(\"photo_url\"),\r\n            userid: localStorage.getItem(\"user_email\")\r\n        };\r\n        axios.post(\"http://localhost:8080/posts/add-post\", post)\r\n            .then(() => { this.setState(this.initialState)})\r\n            .then(() => this.setModalVisible(true))\r\n    };\r\n\r\n    postChange = event => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleChange= e =>{\r\n    this.setState({category:e});\r\n}\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal\r\n                    centered\r\n                    visible={this.state.modalVisible}\r\n                    onCancel = {this.handleCancelModal}\r\n                    footer={[\r\n                        <Link exact to = {\"/\"}>\r\n                        <Button> Ok </Button>\r\n                        </Link>\r\n                    ]}\r\n                >\r\n                    <Row justify={\"center\"}>\r\n                    <p>\r\n                        <Image width={95} preview={false} style={{padding: '5px 5px'}}\r\n                              src={logo}/>\r\n                    </p>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                    <Title level={2} >Anuntul a fost postat cu succes!</Title>\r\n                    </Row>\r\n                </Modal>\r\n\r\n                <Form\r\n                    labelCol={{\r\n                        span: 10,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 17,\r\n                    }}\r\n                    style={{width:500}}\r\n\r\n                    onSubmitCapture={this.submitPost}\r\n                >\r\n                    <Form.Item\r\n                        name=\"title\"\r\n                        label=\"Titlu\"\r\n                        rules={[\r\n                            {\r\n                                min: 3,\r\n                                max:30,\r\n                                required: true,\r\n                                message: 'Introduceți un titlu mai mare de 3 caractere!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input placeholder=\"Adauga Titlu\" name=\"title\" className=\"form-control\"\r\n                               value={this.state.title} onChange={this.postChange}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        label=\"Descriere\"\r\n                        rules={[\r\n                            {\r\n                                min:10,\r\n                                required: true,\r\n                                message: 'Adauga o descriere fiabila! (mai mult de 10 caractere)',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input.TextArea rows={5} placeholder=\"Adauga descrierea\" name=\"description\"  className=\"form-control\"\r\n                               value={this.state.description} onChange={this.postChange}/>\r\n                    </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"category\"\r\n                    label=\"Categorie\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Adauga Categoria',\r\n                            whitespace: true,\r\n                        },\r\n                    ]}\r\n                    style={{width:500}}\r\n                >\r\n                    <Select\r\n                        placeholder=\"Alege categoria\"\r\n                        name = \"category\"\r\n                        value={this.state.category} onChange={this.handleChange}>\r\n                        <Option value=\"Mobila si interior\">Mobila si interior</Option>\r\n                        <Option value=\"Haine, incaltaminte, accesorii\">Haine, incaltaminte, accesorii</Option>\r\n                        <Option value=\"Gadget-uri\">Gadget-uri</Option>\r\n                        <Option value=\"Sport, sanatate, frumusete\">Sport, sanatate, frumusete</Option>\r\n                        <Option value=\"Totul pentru copii\">Totul pentru copii</Option>\r\n                        <Option value=\"Animale de companie\">Animale de companie</Option>\r\n                        <Option value=\"Plante\">Plante</Option>\r\n                        <Option value=\"Carti, manuale\">Carti, manuale</Option>\r\n                        <Option value=\"Totul pentru casa\">Totul pentru casa</Option>\r\n                        <Option value=\"Instrumente muzicale\">Instrumente muzicale</Option>\r\n                        <Option value=\"Instrumente, constructie\">Instrumente, constructie</Option>\r\n\r\n\r\n                    </Select >\r\n                </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"photo\"\r\n                        label=\"Adauga poza\"\r\n                        >\r\n                        <UploadPhoto/>\r\n\r\n                    </Form.Item>\r\n\r\n                        <Button type=\"submit\"\r\n                                 htmlType=\"submit\"\r\n                                >\r\n                       Posteaza anuntul </Button>\r\n\r\n                    {/*</Form.Item>*/}\r\n\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        postObject:state.post\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        savePost: (postObject) => dispatch(savePost(postObject))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Announcement);\r\n","import React from 'react';\r\nimport {Col, Layout, Row} from \"antd\";\r\nimport Announcement from \"../components/Announcement\";\r\n\r\nconst Add_announcement = () => {\r\n    return (\r\n        <>\r\n            <Layout style={{height:'150vh'}}>\r\n\r\n                <Row>\r\n                    <h1 style={{'font-size':36,\r\n                        marginLeft:'70px',\r\n                        padding:'25px',\r\n                        color:'#1890ff'\r\n                    }}>\r\n                        Creaza  un anunt</h1>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col offset={5} >\r\n                        <Announcement/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Layout>\r\n        </>\r\n\r\n    );\r\n}\r\nexport default Add_announcement;"," import axios from \"axios\";\r\n\r\n//Connects react with spring server\r\nconst USER_API_BASE_URL = \"http://localhost:8080/user/register\";\r\n\r\nclass UserService{\r\n\r\n    //Get user method\r\n    getUsers(){\r\n        return axios.get(USER_API_BASE_URL);\r\n    }\r\n\r\n    getLoggedInUser(){\r\n        return axios.get(\"http://localhost:8080/user/MyProfile\");\r\n    }\r\n\r\n    createUser(user){\r\n        return axios.post(USER_API_BASE_URL, user);\r\n    }\r\n\r\n    getUserById(userId){\r\n        return axios.get(USER_API_BASE_URL + '/' + userId);\r\n    }\r\n\r\n    updateUser(user){\r\n        return axios.put(\"http://localhost:8080/user/MyProfile\" + '/' , user);\r\n    }\r\n\r\n    deleteUser(userId){\r\n        return axios.delete(USER_API_BASE_URL + '/' +  userId);\r\n    }\r\n}\r\n\r\nexport default new UserService()","import React, {Component} from \"react\";\r\nimport {Button, Col, Row, Card, Form, Input, Select, Modal, Image} from 'antd';\r\nimport Avatar from \"antd/es/avatar/avatar\";\r\nimport axios from \"axios\";\r\nimport UserService from \"../../service/UserService\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport logo from \"../../assets/logo2.png\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport Text from \"antd/es/typography/Text\";\r\n\r\n\r\n\r\nconst {  } = Select;\r\n\r\n\r\n\r\nclass AboutClient extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            phone: '',\r\n            province: '',\r\n            disabled: true,\r\n            showButton: false,\r\n            modalVisible: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/user/MyProfile\"\r\n        ).then((res) => {\r\n            let user = res.data;\r\n            this.setState({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                password: user.password,\r\n                phone: user.phone,\r\n                province: user.province\r\n            })\r\n            console.log('user => ' + JSON.stringify(user))\r\n        }).catch((error) => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n\r\n    updateUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        let user = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            phone: this.state.phone,\r\n            province: this.state.province\r\n        };\r\n        console.log('user => ' + JSON.stringify(user));\r\n        this.setModalVisible(true);\r\n        UserService.updateUser(user, this.state.id).then( res => {\r\n            this.props.history.push('/MyProfile');\r\n        });\r\n    }\r\n\r\n    //Assign the new values to user\r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changePhoneHandler= (event) => {\r\n        this.setState({phone: event.target.value});\r\n    }\r\n\r\n    changeProvinceHandler= (event) => {\r\n        this.setState({province: event.target.value});\r\n    }\r\n\r\n    toggleDisabled = () => {\r\n        this.setState({\r\n            disabled: !this.state.disabled,\r\n            showButton: !this.state.showButton\r\n        });\r\n    };\r\n\r\n    setModalVisible(modalVisible) {\r\n        this.setState({ modalVisible });\r\n    }\r\n\r\n    render() {\r\n\r\n        const displayButton = (\r\n<Row >\r\n            <Form.Item style={{marginRight:\"50%\"}}>\r\n                <Button type=\"primary\">\r\n                    Anuleaza\r\n                </Button>\r\n            </Form.Item>\r\n\r\n        <Form.Item >\r\n            <Button onClick={this.updateUser} htmlType={\"submit\"} type=\"primary\">\r\n                Actualizeaza\r\n            </Button>\r\n        </Form.Item>\r\n</Row>\r\n\r\n        );\r\n\r\n        const dontDisplayButton = (\r\n            <Form.Item>\r\n                <Button onClick={this.toggleDisabled} type=\"primary\">\r\n                    Actualizati Profilul\r\n                </Button>\r\n            </Form.Item>\r\n\r\n        );\r\n\r\n\r\n        console.log(localStorage.getItem(\"jwtToken\"));\r\n        return (\r\n\r\n            <div>\r\n                <Modal\r\n                    centered\r\n                    visible={this.state.modalVisible}\r\n                    footer={[\r\n                        <Link exact to = {\"/\"}>\r\n                            <Button > Pagina Principala </Button>\r\n                        </Link>\r\n                    ]}\r\n                >\r\n                    <Row justify={\"center\"}>\r\n                        <p>\r\n                            <Image width={95} preview={false} style={{padding: '5px 5px'}}\r\n                                   src={logo}/>\r\n                        </p>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Title level={2} >Profilul a fost creat cu succes!</Title>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Title level={4} > Bine ati venit!</Title>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Text type={\"secondary\"} >Alegeti unde vreti sa mergeti acum:</Text>\r\n                    </Row>\r\n                </Modal>\r\n\r\n\r\n                <div className=\"site-card-border-less-wrapper\">\r\n                    <Card title=\"MyProfile\" bordered={false}>\r\n                        <h1>hello {this.state.email}</h1>\r\n                        {/* <h1> [[${this.#request.userPrinciple.principal.username}]]</h1>*/}\r\n                        <Row>\r\n                            <Col span={5}>\r\n                                <Avatar size={128} src=\"https://i.ibb.co/V3NQKqC/photo-2021-09-27-14-16-38.jpg\"/>\r\n                            </Col>\r\n                            <Col span={19}>\r\n                                <Form\r\n                                    labelCol={{\r\n                                        span: 4,\r\n                                    }}\r\n                                    wrapperCol={{\r\n                                        span: 10,\r\n                                    }}\r\n                                >\r\n\r\n                                    <Form.Item\r\n                                        name=\"email\"\r\n                                        label=\"E-mail\"\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email-ul este invalid!',\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Introduceți Email-ul!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input value={this.state.email} placeholder={this.state.email} disabled={this.state.disabled}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"name\"\r\n                                        label=\"Prenume\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Introduceți prenumele!',\r\n                                                whitespace: true,\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input value={this.state.firstName} placeholder={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                                    </Form.Item>\r\n\r\n\r\n\r\n                                    <Form.Item\r\n                                        name=\"surname\"\r\n                                        label=\"Nume\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Introduceți numele!',\r\n                                                whitespace: true,\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input value={this.state.lastName} placeholder={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"residence\"\r\n                                        label=\"Orasul\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Introduceți orașul',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input value={this.state.province} placeholder={this.state.province} onChange={this.changeProvinceHandler}/>\r\n                                    </Form.Item>\r\n\r\n                                    <Form.Item\r\n                                        name=\"phone\"\r\n                                        label=\"Nr de telefon\"\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                min: 8,\r\n                                                max: 8,\r\n                                                message: 'Introduceți numarul de telefon!',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n\r\n                                        <Input type={'number'}\r\n                                               prefix=\"+373\"\r\n                                               value={this.state.phone}\r\n                                               placeholder={this.state.phone}\r\n                                               onChange={this.changePhoneHandler}\r\n                                        />\r\n                                    </Form.Item>\r\n\r\n\r\n                                    {this.state.showButton ? displayButton : dontDisplayButton }\r\n\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default withRouter(AboutClient);","import React from \"react\";\r\nimport {Row, Card} from 'antd';\r\n\r\n\r\n\r\n\r\nconst Favorites = () => {\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div className=\"site-card-border-less-wrapper\">\r\n                <Card title=\"Favorite Items\" bordered={false} style={{overflow:'auto', height:'700px'}}>\r\n\r\n                   </Card>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Favorites;","import React from 'react';\r\n\r\nimport {Card, Col, Space} from 'antd';\r\nimport {HeartTwoTone, MessageTwoTone, UserOutlined} from \"@ant-design/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst {Meta} = Card;\r\n\r\n\r\n\r\nconst SmallerCardApp = ({product}) => {\r\n\r\n    return (\r\n        <div className={'MyCard'}>\r\n            <Space align=\"center\">\r\n                <Col>\r\n                    <Link exact to={`posts/${product.id}`}>\r\n                        <Card\r\n                            hoverable\r\n                            style={{width: 180, margin: '10px'}}\r\n                            cover={\r\n                                <img\r\n                                    alt=\"example\"\r\n                                    src={product.photo}/>\r\n                            }\r\n                            actions={[\r\n                                <HeartTwoTone key=\"fav\" twoToneColor=\"#eb2f96\"/>,\r\n                                <MessageTwoTone key=\"mess\" twoToneColor=\"#1890ff\"/>,\r\n                            ]}\r\n                        >\r\n\r\n                            <Meta\r\n                                title={product.title}\r\n                                avatar={<UserOutlined/>}\r\n                                category={product.category}\r\n                            />\r\n                        </Card>\r\n                    </Link>\r\n                </Col>\r\n            </Space>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default SmallerCardApp;","import {Button, Card} from 'antd';\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState} from \"react\";\r\nimport SmallerCardApp from \"../smallerCardApp\";\r\n\r\n\r\n\r\nconst UsersPost  = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n\r\n    // Get all posts:\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/posts\").then(({data}) => setProducts(data))\r\n    }, [])\r\n\r\n    // Get user information:\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8080/user/MyProfile\").then(({data}) => setUser(data))\r\n    }, [])\r\n\r\n    //Delete post:\r\n    const deleteHandler =  (id, event) => {\r\n        axios.delete(`http://localhost:8080/posts/${id}`) .then(res => {\r\n            const products2 = products.filter(item => item.id !== id);\r\n            setProducts( products2 );\r\n        });\r\n    }\r\n\r\n        return (\r\n            <>\r\n                <div className=\"site-card-border-less-wrapper\">\r\n                    <Card title=\"Postarile mele\" bordered={false} style={{overflow:'auto', height:'700px'}}>\r\n                { products.filter((products) => user.email == products.userid)\r\n                    .map((p) =>\r\n                        <>\r\n                            <SmallerCardApp product={p}/>\r\n                            <div>\r\n                                <Button onClick={(e) => deleteHandler(p.id, e)}\r\n                                        type=\"primary\" danger\r\n                                        style={{margin: '10px', marginLeft:\"7%\"}}>\r\n                                    Delete\r\n                                </Button>\r\n                            </div>\r\n                        </>)\r\n                }\r\n                    </Card>\r\n                </div>\r\n\r\n            </>\r\n        );\r\n}\r\n\r\nexport default UsersPost;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport AboutClient from \"./AboutClient\";\r\nimport Favorites from \"./Favorites\";\r\nimport UsersPost from \"./UsersPost\";\r\n\r\n\r\nfunction Tabs() {\r\n    const [toggleState, setToggleState] = useState(1);\r\n\r\n    const toggleTab = (index) => {\r\n        setToggleState(index);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"bloc-tabs\">\r\n                <button\r\n                    className={toggleState === 1 ? \"tabs active-tabs\" : \"tabs\"}\r\n                    onClick={() => toggleTab(1)}\r\n                >\r\n                    My Profile\r\n                </button>\r\n                <button\r\n                    className={toggleState === 2 ? \"tabs active-tabs\" : \"tabs\"}\r\n                    onClick={() => toggleTab(2)}\r\n                >\r\n                    Favorite Items\r\n                </button>\r\n                <button\r\n                    className={toggleState === 3 ? \"tabs active-tabs\" : \"tabs\"}\r\n                    onClick={() => toggleTab(3)}\r\n                >\r\n                    My Posts\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"content-tabs\">\r\n                <div\r\n                    className={toggleState === 1 ? \"content  active-content\" : \"content\"}\r\n                >\r\n                   <AboutClient/>\r\n                </div>\r\n\r\n                <div\r\n                    className={toggleState === 2 ? \"content  active-content\" : \"content\"}\r\n                >\r\n                    <Favorites/>\r\n                </div>\r\n\r\n                <div\r\n                    className={toggleState === 3 ? \"content  active-content\" : \"content\"}\r\n                >\r\n                    <UsersPost/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Tabs;","\r\nimport React from \"react\";\r\nimport {Layout} from \"antd\";\r\nimport Tabs from \"./tabs\";\r\n\r\n\r\n\r\nconst MyProfile = () => {\r\n        return (\r\n            <>\r\n                <Layout>\r\n\r\n                <Tabs/>\r\n\r\n                </Layout>\r\n            </>\r\n\r\n        );\r\n\r\n}\r\nexport default  MyProfile;","import React, {Component} from \"react\";\r\nimport {Button, Layout, Menu} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nconst {Sider} = Layout;\r\n\r\nclass SiderApp extends Component {\r\n    render() {\r\n        const userLinks = (\r\n            <div style={{padding: '40px 60px'}}>\r\n                <Link exact to=\"/add_announcement\"><Button type=\"primary\" ghost>\r\n                    Creaza un anunt\r\n                </Button></Link>\r\n            </div>\r\n\r\n        );\r\n\r\n        const guestLinks = (\r\n            <div style={{padding: '40px 60px'}}>\r\n                <Link exact to=\"/login\"><Button type=\"primary\" ghost>\r\n                    Creaza un anunt\r\n                </Button></Link>\r\n            </div>\r\n        );\r\n\r\n        const handleClick = e => {\r\n            localStorage.setItem(\"menuKey\", e.key);\r\n            this.props.history.push('/');\r\n            console.log(e.key)\r\n        };\r\n\r\n        return (\r\n            <div className={'Sider'}>\r\n                <Sider className=\"site-layout-background\" width={200}>\r\n\r\n                    <Menu\r\n                        onClick={handleClick}\r\n                        mode=\"inline\"\r\n                        style={{\r\n                            height: '92vh',\r\n                            position: 'fixed',\r\n                            left: 0,\r\n                            width: '250px',\r\n                        }}>\r\n\r\n                        {this.props.auth.isLoggedIn ? userLinks : guestLinks}\r\n\r\n                        <Menu.Item key=\" \">Toate Produsele</Menu.Item>\r\n                        <Menu.Item key=\"Mobila si interior\">Mobila si interior</Menu.Item>\r\n                        <Menu.Item key=\"Haine, incaltaminte, accesorii\">Haine, incaltaminte, accesorii</Menu.Item>\r\n                        <Menu.Item key=\"Gadget-uri\">Gadget-uri</Menu.Item>\r\n                        <Menu.Item key=\"Sport, sanatate, frumusete\">Sport, sanatate, frumusete</Menu.Item>\r\n                        <Menu.Item key=\"Totul pentru copii\">Totul pentru copii</Menu.Item>\r\n                        <Menu.Item key=\"Animale de companie\">Animale de companie</Menu.Item>\r\n                        <Menu.Item key=\"Plante\">Plante</Menu.Item>\r\n                        <Menu.Item key=\"Carti, manuale\">Carti, manuale</Menu.Item>\r\n                        <Menu.Item key=\"Totul pentru casa\">Totul pentru casa</Menu.Item>\r\n                        <Menu.Item key=\"Instrumente muzicale\">Instrumente muzicale</Menu.Item>\r\n                        <Menu.Item key=\"Instrumente, constructie\">Instrumente, constructie</Menu.Item>\r\n\r\n                    </Menu>\r\n\r\n                </Sider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(SiderApp));","import React, {Component} from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Checkbox,\r\n    Button, Row, Image, Modal, Col, Alert\r\n} from 'antd';\r\n\r\nimport {registerUser} from \"../service\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport logo from \"../assets/logo2.png\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport Text from \"antd/es/typography/Text\";\r\n\r\n\r\nclass RegistrationForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    initialState = {\r\n        modalVisible: false,\r\n        error: '',\r\n        showError: false,\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        province: ''\r\n    }\r\n\r\n    setModalVisible(modalVisible) {\r\n        this.setState({ modalVisible });\r\n    }\r\n\r\n\r\n    handleCancelModal = () => {\r\n        console.log('Clicked cancel button');\r\n        this.props.history.push('/');\r\n    };\r\n\r\n    userChange = (event) => {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        });\r\n    };\r\n\r\n    registerUser = () => {\r\n        let userObject = {\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            phone: this.state.phone,\r\n            province: this.state.province\r\n        };\r\n        this.props.registerUser(userObject);\r\n        this.resetRegistrationForm();\r\n        setTimeout(() => {\r\n            if (this.props.user.message != null){\r\n                this.setModalVisible(true)\r\n            }else{\r\n                this.setState({\"showError\": true});\r\n                this.setState({\"error\" : \"This email already exists or something is missing\"});\r\n                console.log(this.state.error);\r\n            }\r\n        }, 2000);\r\n    };\r\n\r\n    resetRegistrationForm = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showError && this.state.error && (\r\n                    <Alert variant=\"danger\" onClose={() => this.resetRegistrationForm()} dismissible message={this.state.error}>\r\n                        {this.error}\r\n                    </Alert>\r\n                )}\r\n\r\n                <Modal\r\n                    centered\r\n                    visible={this.state.modalVisible}\r\n                    onCancel = {this.handleCancelModal}\r\n                    footer={[\r\n                        <Row justify={\"space-around\"}>\r\n                            <Link exact to={\"/\"}>\r\n                                <Col>\r\n                                    <Button> Pagina Principala </Button>\r\n                                </Col>\r\n                            </Link>,\r\n\r\n                                <Col>\r\n                                    <Link exact to = {\"/login\"}>\r\n                                        <Button type={\"primary\"} > Conecteaza-te </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                        </Row>\r\n\r\n\r\n\r\n                    ]}\r\n                >\r\n                    <Row justify={\"center\"}>\r\n                        <p>\r\n                            <Image width={95} preview={false} style={{padding: '5px 5px'}}\r\n                                   src={logo}/>\r\n                        </p>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Title level={2} >Profilul a fost creat cu succes!</Title>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Title level={4} > Bine ati venit!</Title>\r\n                    </Row>\r\n                    <Row justify={\"center\"}>\r\n                        <Text type={\"secondary\"} >Alegeti unde vreti sa mergeti acum:</Text>\r\n                    </Row>\r\n                </Modal>\r\n\r\n                <Form\r\n                    labelCol={{\r\n                        span: 10,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 17,\r\n                    }}\r\n                    style={{width:500}}\r\n                >\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Email-ul este invalid!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți Email-ul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                               value={this.state.email} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"lastname\"\r\n                        label=\"Nume\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți numele!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\"\r\n                               value={this.state.lastName} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"firstname\"\r\n                        label=\"Prenume\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți prenumele!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                               value={this.state.firstName} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"orasul\"\r\n                        label=\"orasul\"\r\n                        rules={[\r\n                            {\r\n                                message: 'Introduceți prenumele!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input placeholder=\"orasul\" name=\"orasul\" className=\"form-control\"\r\n                               value={this.state.province} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Nr de telefon\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 8,\r\n                                max: 8,\r\n                                message: 'Introduceți numarul de telefon!',\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n\r\n                        <Input type={'number'}\r\n                               prefix=\"+373\"\r\n                               placeholder=\"Phone\" name=\"phone\" className=\"form-control\"\r\n                               value={this.state.phone} onChange={this.userChange}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Parola\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 5,\r\n                                message: 'Introducreți parola!',\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirmă parola\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Confirmați parola!',\r\n                            },\r\n                            ({getFieldValue}) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('Parola nu coincide!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Input.Password placeholder=\"Confirm Password\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.userChange}/>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n                        style={{width:500}}\r\n                    >\r\n                        <Checkbox>\r\n                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                            Sunt de acord cu <a href=\"\">termenii și condițiile</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\"  onClick={this.registerUser}>\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                </Form>\r\n            </>\r\n        );\r\n    };\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n        user:state.user\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        registerUser: (userObject) => dispatch(registerUser(userObject))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RegistrationForm));\r\n","import React from 'react';\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport Layout from \"antd/es/layout/layout\";\r\nimport {Col, Row} from \"antd\";\r\nimport background from \"../assets/back3.jpg\";\r\n\r\n\r\n\r\nconst Register = () => {\r\n    return (\r\n        <>\r\n            <Layout style={{ height:\"100vh\",backgroundImage: `url(${background})` }}>\r\n\r\n                    <Row>\r\n                        <h1 style={{'font-size':36,\r\n                            marginLeft:'70px',\r\n                            padding:'25px',\r\n                            color:'#1890ff'\r\n                        }}>\r\n                            Înregistreaza-te</h1>\r\n                    </Row>\r\n\r\n                <Row>\r\n                    <Col offset={5} >\r\n                        <RegistrationForm/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\nexport default Register;","import React, {Component} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport {connect} from 'react-redux'\r\nimport {Alert, Button, Checkbox, Col, Form, Image, Input, Modal, Row} from 'antd';\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {authenticateUser} from \"../service\";\r\nimport logo from \"../assets/logo2.png\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport Text from \"antd/es/typography/Text\";\r\n\r\n\r\nclass LoginForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    initialState = {\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        showError: false,\r\n        modalVisible: false\r\n    };\r\n\r\n    setModalVisible(modalVisible) {\r\n        this.setState({modalVisible});\r\n    }\r\n\r\n\r\n    credentialChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    validateUser = (props) => {\r\n        let userObject = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n        this.props.authenticateUser(userObject);\r\n        setTimeout(() => {\r\n            if (this.props.auth.isLoggedIn) {\r\n                return this.setModalVisible(true)\r\n            } else {\r\n                this.resetLoginForm();\r\n                this.setState({\"showError\": true});\r\n                this.setState({\"error\": \"Invalid email and password\"});\r\n            }\r\n        }, 500);\r\n    };\r\n\r\n     handleCancelModal = () => {\r\n        console.log('Clicked cancel button');\r\n         this.props.history.push('/');\r\n    };\r\n\r\n    resetLoginForm = () => {\r\n        this.setState(() => this.initialState);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.showError && this.state.error && (\r\n                    <Alert variant=\"danger\" onClose={() => this.resetLoginForm() } dismissible message={this.state.error}>\r\n                        {this.error}\r\n                    </Alert>\r\n                )}\r\n                {/*{error && <Alert variant={\"danger\"} message={error}>{error}</Alert>}*/}\r\n                <Modal\r\n                    centered\r\n                    onCancel = {this.handleCancelModal}\r\n                    visible={this.state.modalVisible}\r\n                    footer={[\r\n                        <Row justify={\"space-around\"}>\r\n                            <Link exact to={\"/\"}>\r\n                                <Col>\r\n                                    <Button> Pagina Principala </Button>\r\n                                </Col>\r\n                            </Link>,\r\n                            <Link exact to={\"/add_announcement\"}>\r\n                                <Col>\r\n                                    <Button type={\"primary\"}> Creeaza un anunt </Button>\r\n                                </Col>\r\n                            </Link>\r\n                        </Row>\r\n                    ]}\r\n                >\r\n                    <>\r\n                        <Row justify={\"center\"}>\r\n                            <p>\r\n                                <Image width={95} preview={false} style={{padding: '5px 5px'}}\r\n                                       src={logo}/>\r\n                            </p>\r\n                        </Row>\r\n                        <Row justify={\"center\"}>\r\n                            <Title level={2}>Bine ai revenit!</Title>\r\n                        </Row>\r\n                        <Row justify={\"center\"}>\r\n                            <Text type={\"secondary\"}>Alegeti unde vreti sa mergeti acum:</Text>\r\n                        </Row>\r\n                    </>\r\n                </Modal>\r\n\r\n                <Form\r\n                >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        rules={[{\r\n                            required: true,\r\n                            message: 'Please input your Email!'\r\n                        }\r\n                        ]}\r\n                        style={{width: 400}}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Email\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            value={this.state.email}\r\n                            onChange={this.credentialChange}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{\r\n                            required: true,\r\n                            message: 'Please input your Password!'\r\n                        }\r\n                        ]}\r\n                    >\r\n                        <Input.Password\r\n                            name=\"password\"\r\n                            className=\"form-control\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={this.state.password}\r\n                            onChange={this.credentialChange}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                            <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                        <a className=\"login-form-forgot\" href=\"\">\r\n                            Forgot password\r\n                        </a>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\"\r\n                                htmlType=\"submit\"\r\n                                className=\"login-form-button\"\r\n                                onClick={this.validateUser}\r\n                        >\r\n                            Log in\r\n                        </Button>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        Or <Link exact to={\"/register\"}><a href=\"\">register now!</a></Link>\r\n                    </Form.Item>\r\n\r\n\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authenticateUser: (userObject) => dispatch(authenticateUser(userObject))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginForm));\r\n","import React from 'react';\r\nimport Layout from \"antd/es/layout/layout\";\r\nimport {Col, Row} from \"antd\";\r\nimport LoginForm from \"./LoginForm\";\r\n\r\nconst Login = () => {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{height:'100vh'}}>\r\n                <Row>\r\n                    <h1  style={{'font-size':36,\r\n                        marginLeft:'100px',\r\n                        padding:'25px',\r\n                        color:'#1890ff'\r\n                    }}>\r\n                        Log In\r\n                    </h1>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col offset={8}>\r\n                        <LoginForm/>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Layout>\r\n        </>\r\n    );\r\n}\r\nexport default Login;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            fetch(url)\r\n                .then(res  => {\r\n                    if (!res.ok) { // error coming back from server\r\n                        throw Error('could not fetch the data for that resource');\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then(data => {\r\n                    setIsPending(false);\r\n                    setData(data);\r\n                    setError(null);\r\n                })\r\n                .catch(err => {\r\n                    // auto catches network / connection error\r\n                    setIsPending(false);\r\n                    setError(err.message);\r\n                })\r\n        }, 1000);\r\n    }, [])\r\n\r\n    return { data, isPending, error };\r\n}\r\n\r\nexport default useFetch;","import React, {useState} from \"react\";\r\nimport {Button, Col, notification, Row, Spin} from \"antd\";\r\nimport Title from \"antd/es/typography/Title\";\r\nimport Text from \"antd/es/typography/Text\";\r\nimport Paragraph from \"antd/es/typography/Paragraph\";\r\nimport {HeartTwoTone, MessageTwoTone} from \"@ant-design/icons\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport useFetch from \"../components/useFetch\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\r\nimport {Carousel} from 'react-responsive-carousel';\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nconst DetailsPage = () => {\r\n\r\n    const auth = useSelector((state) => state.auth);\r\n    const {id} = useParams();\r\n    const {data, error, isPending} = useFetch(`http://localhost:8080/posts/posts/${id}`);\r\n    const [userVisible, setUserVisible] = useState(false)\r\n    const [userpost, setUserPost] = useState([]);\r\n\r\n    const state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        phone: '',\r\n        province: ''\r\n    }\r\n    const userDetails = (e) => {\r\n        axios.get(`http://localhost:8080/user/post/${data.userid}`\r\n        ).then((res) => {\r\n            let user = res.data;\r\n            setUserPost({\r\n                first: user.firstName,\r\n                lastName: user.lastName,\r\n                email: user.email,\r\n                password: user.password,\r\n                phone: user.phone,\r\n                province: user.province\r\n            })\r\n            setUserVisible(!userVisible)\r\n            console.log('user => ' + JSON.stringify(user))\r\n        }).catch((error) => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n    const addedToFavorite = type => {\r\n        notification[type]({\r\n            message: 'Adaugat la favorit',\r\n            description:\r\n                'Postarea a fost adaugata cu succes in lista de produse favorite!',\r\n            duration: 3.5\r\n        });\r\n    };\r\n\r\n\r\n    const userLinks =  (\r\n        <>\r\n        <Row justify=\"space-around\" style={{marginTop: '3%', marginBottom: '3%'}}>\r\n            <Col>\r\n                <Button onClick={() => addedToFavorite('success')}>\r\n                    <HeartTwoTone key=\"fav\" twoToneColor=\"#eb2f96\"/>\r\n                    Add to Favorite\r\n                </Button>\r\n            </Col>\r\n            <Col>\r\n                <Button onClick={userDetails}>\r\n                    <MessageTwoTone key=\"mess\" twoToneColor=\"#1890ff\"/>Info proprietar\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n            <Row>\r\n                {\r\n                userVisible\r\n                    ?\r\n                    <div>\r\n                        <Row>\r\n                            <p>Telefon: {userpost.phone}</p>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Email:  {userpost.email}</p>\r\n\r\n                        </Row>\r\n                        <Row>\r\n                            <p>Oras: {userpost.province}</p>\r\n\r\n                        </Row>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n            }\r\n\r\n            </Row>\r\n        </>\r\n    );\r\n\r\n    const guestLinks = (\r\n        <div style={{marginTop: '3%', marginBottom: '3%'}}>\r\n            <Col>\r\n                <Text type=\"secondary\">Conecteaza-te sau Inregistraza-te pentru a contacta autorul anuntului:</Text>\r\n            </Col>\r\n            <Row justify=\"space-around\" style={{marginTop: '1%'}}>\r\n                <Col>\r\n                    <Link exact to={\"/login\"}>\r\n                        <Button type=\"link\">Conecteaza-te</Button>\r\n                    </Link>\r\n                </Col>\r\n                <Col>\r\n                    <Link exact to={\"/register\"}>\r\n                        <Button type=\"link\">Inregistreaza-te</Button>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {isPending &&\r\n                <Row justify=\"center\" style={{height: \"100vh\"}}>\r\n                    <Col offset={20} span={3} style={{padding: \"40px\"}}>\r\n                        <div align={\"center\"}><Spin style={{width:\"50vh\"}} tip={\"loading\"}/></div>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            {error && <div>{error}</div>}\r\n\r\n            {data &&\r\n            <Row justify=\"space-around\" align=\"middle\">\r\n                <Col span={10} style={{padding: \"40px\"}}>\r\n                    <div>\r\n                        <Carousel>\r\n                            <div>\r\n                                <img alt=\"\" src={data.photo}/>\r\n                            </div>\r\n                        </Carousel>\r\n                    </div>\r\n\r\n                </Col>\r\n                <Col style={{padding: \"40px\", marginBottom: \"15%\"}} span={10}>\r\n                    <Row> <Title>{data.title}</Title> </Row>\r\n                    <Row>\r\n                        <Paragraph>\r\n                            {data.description}\r\n                        </Paragraph>\r\n                    </Row>\r\n\r\n                    {auth.isLoggedIn ? userLinks : guestLinks}\r\n\r\n\r\n                    <Row justify=\"end\">\r\n                        <Text type=\"secondary\">Posted by: {data.userid}</Text>\r\n                    </Row>\r\n                    <Row justify=\"end\">\r\n                        <Text type=\"secondary\">{data.created}</Text>\r\n                    </Row>\r\n\r\n                </Col>\r\n            </Row>\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default DetailsPage;\r\n\r\n","import React from 'react';\r\nimport './App.less';\r\nimport HeaderApp from \"./components/Header\";\r\nimport {\r\n    Switch,\r\n    Route, BrowserRouter\r\n} from \"react-router-dom\";\r\nimport chat from \"./pages/Chat\";\r\nimport Home from \"./pages/Home\";\r\nimport {Layout} from \"antd\";\r\nimport Add_announcement from \"./pages/Add_announcement\";\r\nimport MyProfile from \"./components/MyProfile/MyProfile\";\r\nimport SiderApp from \"./components/Sider\";\r\nimport Register from \"./pages/RegisterPage\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\nimport DetailsPage from \"./pages/detailsPage\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Layout>\r\n                <HeaderApp/>\r\n                <Layout>\r\n                    <SiderApp/>\r\n                <Switch>\r\n                    <Route path=\"/chat\"  component={chat}/>\r\n                    <Route path=\"/\" exact component={Home}/>\r\n                    <Route path=\"/add_announcement\"  component={Add_announcement}/>\r\n                    <Route path=\"/register\"  component={Register}/>\r\n                    <Route path=\"/MyProfile\"  component={MyProfile}/>\r\n                    <Route path=\"/login\"  component={LoginPage}/>\r\n                    <Route path=\"/posts/:id\"  component={DetailsPage}/>\r\n\r\n\r\n\r\n                </Switch>\r\n                </Layout>\r\n            </Layout>\r\n\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import * as UT from \"./userTypes\";\r\n\r\nconst initialState = {\r\n    users: [],\r\n    error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UT.USER_REQUEST:\r\n            return {\r\n                ...state,\r\n            };\r\n        case UT.USER_SUCCESS:\r\n            return {\r\n                users: action.payload,\r\n                error: \"\",\r\n            };\r\n        case UT.USER_SAVED_SUCCESS:\r\n            return {\r\n                message: action.payload,\r\n                error: \"\",\r\n            };\r\n        case UT.USER_FAILURE:\r\n            return {\r\n                users: [],\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import {LOGIN_REQUEST, LOGOUT_REQUEST, SUCCESS, FAILURE} from './authTypes'\r\n\r\nconst initialState = {\r\n    username: '',\r\n    isLoggedIn: ''\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case SUCCESS:\r\n            return {\r\n                isLoggedIn: action.payload\r\n            }\r\n        case FAILURE:\r\n            return {\r\n                isLoggedIn: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default reducer;","import * as PT from \"./postTypes\";\r\n\r\nconst initialState = {\r\n    post: \"\",\r\n    error: \"\",\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PT.SAVE_POST_REQUEST:\r\n        case PT.FETCH_POST_REQUEST:\r\n        case PT.UPDATE_POST_REQUEST:\r\n        case PT.DELETE_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n            };\r\n        case PT.POST_SUCCESS:\r\n            return {\r\n                post: action.payload,\r\n                error: \"\",\r\n            };\r\n        case PT.POST_FAILURE:\r\n            return {\r\n                post: \"\",\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from \"redux\";\r\nimport userReducer from \"./user/userReducer\";\r\nimport authReducer from \"./user/authentication/authReducer\"\r\nimport postReducer from \"./post/postReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n    user: userReducer,\r\n    post: postReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport default rootReducers;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./rootReducers\";\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './service/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}><App /></Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo2.39e7dd4f.png\";"],"sourceRoot":""}