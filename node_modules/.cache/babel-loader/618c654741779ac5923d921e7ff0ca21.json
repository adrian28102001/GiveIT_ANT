{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vraga\\\\giveit_Ant\\\\GiveIT_ANT\\\\src\\\\components\\\\RegistrationForm.js\";\nimport React, { Component, useState } from 'react';\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\nimport { DatePicker, Space } from 'antd';\n\nfunction onChange(date, dateString) {\n  console.log(date, dateString);\n}\n\nconst {\n  Option\n} = Select;\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUser = event => {\n      event.preventDefault();\n      let user = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        birthday: this.state.birthday,\n        gender: this.state.gender,\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log('user => ' + JSON.stringify(user));\n      UserService.createUser(user).then(res => {\n        this.props.history.push('/users');\n      });\n    };\n\n    this.changeFirstNameHandler = event => {\n      this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    this.changeLastNameHandler = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    this.changeBirthdayHandler = event => {\n      this.setState({\n        birthday: event.target.value\n      });\n    };\n\n    this.changeGenderHandler = event => {\n      this.setState({\n        gender: event.target.value\n      });\n    };\n\n    this.changeEmailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.changePasswordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      userName: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      password: '',\n      birthday: '',\n      gender: ''\n    };\n    this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n    this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n    this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n    this.changeBirthdayHandler = this.changeBirthdayHandler.bind(this);\n    this.changeGenderHandler = this.changeGenderHandler.bind(this);\n    this.changeEmailHandler = this.changeEmailHandler.bind(this);\n    this.changePasswordHandler = this.changePasswordHandler.bind(this);\n    this.saveUser = this.saveUser.bind(this);\n  }\n\n  cancel() {\n    this.props.history.push('/users');\n  } //Assign the new values to user\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'Email-ul este invalid!'\n      }, {\n        required: true,\n        message: 'Introduceți Email-ul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"age\",\n      label: \"Data Nasterii\",\n      rules: [{\n        required: true,\n        message: 'Introduceți data nașterii!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Parola\",\n      rules: [{\n        required: true,\n        min: 5,\n        message: 'Introducreți parola!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm\\u0103 parola\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Confirmați parola!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('Parola nu coincide!'));\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"nickname\",\n      label: \"Nickname\",\n      rules: [{\n        required: true,\n        message: 'Introduceți nickname-ul!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"residence\",\n      label: \"Orasul\",\n      rules: [{\n        required: true,\n        message: 'Introduceți orașul'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Nr de telefon\",\n      rules: [{\n        required: true,\n        min: 8,\n        max: 8,\n        message: 'Introduceți numarul de telefon!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: 'number',\n      prefix: \"+373\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"gender\",\n      label: \"Genul\",\n      rules: [{\n        required: true,\n        message: 'Selectați genul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"selecteaza genul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"masculin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, \"Masculin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"feminin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, \"Feminin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"altele\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, \"Altele\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, \"Sunt de acord cu \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 46\n      }\n    }, \"termenii \\u0219i condi\\u021Biile\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 25\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/vraga/giveit_Ant/GiveIT_ANT/src/components/RegistrationForm.js"],"names":["React","Component","useState","Form","Input","Select","Checkbox","Button","DatePicker","Space","onChange","date","dateString","console","log","Option","RegistrationForm","constructor","props","saveUser","event","preventDefault","user","firstName","state","lastName","birthday","gender","email","password","JSON","stringify","UserService","createUser","then","res","history","push","changeFirstNameHandler","setState","target","value","changeLastNameHandler","changeBirthdayHandler","changeGenderHandler","changeEmailHandler","changePasswordHandler","id","match","params","userName","phone","bind","cancel","render","span","type","message","required","min","getFieldValue","validator","_","Promise","resolve","reject","Error","whitespace","max"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button\r\n} from 'antd';\r\n\r\nimport { DatePicker, Space } from 'antd';\r\n\r\nfunction onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass RegistrationForm extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n            birthday: '',\r\n            gender: ''\r\n        }\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeBirthdayHandler = this.changeBirthdayHandler.bind(this);\r\n        this.changeGenderHandler = this.changeGenderHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n\r\n        this.saveUser = this.saveUser.bind(this);\r\n\r\n    }\r\n\r\n    saveUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        let user = {firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            birthday: this.state.birthday,\r\n            gender: this.state.gender,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        };\r\n        console.log('user => ' + JSON.stringify(user));\r\n\r\n        UserService.createUser(user).then(res =>{\r\n            this.props.history.push('/users');\r\n        });\r\n    }\r\n\r\n    cancel(){\r\n        this.props.history.push('/users');\r\n    }\r\n\r\n    //Assign the new values to user\r\n    changeFirstNameHandler= (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler= (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeBirthdayHandler= (event) => {\r\n        this.setState({birthday: event.target.value});\r\n    }\r\n\r\n    changeGenderHandler= (event) => {\r\n        this.setState({gender: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler= (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    changePasswordHandler= (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                >\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Email-ul este invalid!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți Email-ul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"age\"\r\n                               label=\"Data Nasterii\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: 'Introduceți data nașterii!',\r\n                                   },\r\n                               ]}>\r\n                        <Space direction=\"vertical\">\r\n                            <DatePicker onChange={onChange}/>\r\n                        </Space>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Parola\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 5,\r\n                                message: 'Introducreți parola!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirmă parola\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Confirmați parola!',\r\n                            },\r\n                            ({getFieldValue}) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('Parola nu coincide!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"nickname\"\r\n                        label=\"Nickname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți nickname-ul!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"residence\"\r\n                        label=\"Orasul\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți orașul',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Nr de telefon\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 8,\r\n                                max: 8,\r\n                                message: 'Introduceți numarul de telefon!',\r\n                            },\r\n                        ]}\r\n                    >\r\n\r\n                        <Input type={'number'}\r\n                               prefix=\"+373\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"gender\"\r\n                        label=\"Genul\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Selectați genul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"selecteaza genul\">\r\n                            <Option value=\"masculin\">Masculin</Option>\r\n                            <Option value=\"feminin\">Feminin</Option>\r\n                            <Option value=\"altele\">Altele</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n\r\n                    >\r\n                        <Checkbox>\r\n                            Sunt de acord cu <a href=\"\">termenii și condițiile</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}