{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vraga\\\\giveit_Ant\\\\GiveIT_ANT\\\\src\\\\components\\\\RegistrationForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\nimport { DatePicker, Space } from 'antd';\n\nfunction onChange(date, dateString) {\n  console.log(date, dateString);\n}\n\nconst {\n  Option\n} = Select;\n\nconst RegistrationForm = () => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: \"E-mail\",\n    rules: [{\n      type: 'email',\n      message: 'Email-ul este invalid!'\n    }, {\n      required: true,\n      message: 'Introduceți Email-ul!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"age\",\n    label: \"Data Nasterii\",\n    rules: [{\n      required: true,\n      message: 'Introduceți data nașterii!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    label: \"Parola\",\n    rules: [{\n      required: true,\n      min: 5,\n      message: 'Introducreți parola!'\n    }],\n    hasFeedback: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"confirm\",\n    label: \"Confirm\\u0103 parola\",\n    dependencies: ['password'],\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Confirmați parola!'\n    }, ({\n      getFieldValue\n    }) => ({\n      validator(_, value) {\n        if (!value || getFieldValue('password') === value) {\n          return Promise.resolve();\n        }\n\n        return Promise.reject(new Error('Parola nu coincide!'));\n      }\n\n    })],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input.Password, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"nickname\",\n    label: \"Nickname\",\n    rules: [{\n      required: true,\n      message: 'Introduceți nickname-ul!',\n      whitespace: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"residence\",\n    label: \"Orasul\",\n    rules: [{\n      required: true,\n      message: 'Introduceți orașul'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"phone\",\n    label: \"Nr de telefon\",\n    rules: [{\n      required: true,\n      min: 8,\n      max: 8,\n      message: 'Introduceți numarul de telefon!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: 'number',\n    prefix: \"+373\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"gender\",\n    label: \"Genul\",\n    rules: [{\n      required: true,\n      message: 'Selectați genul!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"selecteaza genul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"masculin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, \"Masculin\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"feminin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"Feminin\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"altele\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Altele\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"agreement\",\n    valuePropName: \"checked\",\n    rules: [{\n      validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, \"Sunt de acord cu \", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 37\n    }\n  }, \"termenii \\u0219i condi\\u021Biile\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, \"Register\"))));\n};\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/vraga/giveit_Ant/GiveIT_ANT/src/components/RegistrationForm.js"],"names":["React","useState","Form","Input","Select","Checkbox","Button","DatePicker","Space","onChange","date","dateString","console","log","Option","RegistrationForm","span","type","message","required","min","getFieldValue","validator","_","value","Promise","resolve","reject","Error","whitespace","max"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button\r\n} from 'antd';\r\n\r\nimport { DatePicker, Space } from 'antd';\r\n\r\nfunction onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nconst RegistrationForm = () => {\r\n\r\n    return (\r\n        <>\r\n            <Form\r\n                labelCol={{\r\n                    span: 4,\r\n                }}\r\n                wrapperCol={{\r\n                    span: 14,\r\n                }}\r\n            >\r\n\r\n            <Form.Item\r\n                name=\"email\"\r\n                label=\"E-mail\"\r\n                rules={[\r\n                    {\r\n                        type: 'email',\r\n                        message: 'Email-ul este invalid!',\r\n                    },\r\n                    {\r\n                        required: true,\r\n                        message: 'Introduceți Email-ul!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item name=\"age\"\r\n                        label=\"Data Nasterii\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți data nașterii!',\r\n                            },\r\n                        ]}>\r\n                <Space direction=\"vertical\">\r\n                    <DatePicker onChange={onChange} />\r\n                </Space>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"password\"\r\n                label=\"Parola\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        min:5,\r\n                        message: 'Introducreți parola!',\r\n                    },\r\n                ]}\r\n                hasFeedback\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Confirmă parola\"\r\n                dependencies={['password']}\r\n                hasFeedback\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Confirmați parola!',\r\n                    },\r\n                    ({ getFieldValue }) => ({\r\n                        validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n\r\n                            return Promise.reject(new Error('Parola nu coincide!'));\r\n                        },\r\n                    }),\r\n                ]}\r\n            >\r\n                <Input.Password />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"nickname\"\r\n                label=\"Nickname\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Introduceți nickname-ul!',\r\n                        whitespace: true,\r\n                    },\r\n                ]}\r\n            >\r\n                <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"residence\"\r\n                label=\"Orasul\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Introduceți orașul',\r\n                    },\r\n                ]}\r\n            >\r\n                <Input/>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"phone\"\r\n                label=\"Nr de telefon\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        min:8,\r\n                        max:8,\r\n                        message: 'Introduceți numarul de telefon!',\r\n                    },\r\n                ]}\r\n            >\r\n\r\n                <Input type={'number'}\r\n                    prefix=\"+373\"\r\n                />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"gender\"\r\n                label=\"Genul\"\r\n                rules={[\r\n                    {\r\n                        required: true,\r\n                        message: 'Selectați genul!',\r\n                    },\r\n                ]}\r\n            >\r\n                <Select placeholder=\"selecteaza genul\">\r\n                    <Option value=\"masculin\">Masculin</Option>\r\n                    <Option value=\"feminin\">Feminin</Option>\r\n                    <Option value=\"altele\">Altele</Option>\r\n                </Select>\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n                name=\"agreement\"\r\n                valuePropName=\"checked\"\r\n                rules={[\r\n                    {\r\n                        validator: (_, value) =>\r\n                            value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                    },\r\n                ]}\r\n\r\n            >\r\n                <Checkbox>\r\n                   Sunt de acord cu <a href=\"\">termenii și condițiile</a>\r\n                </Checkbox>\r\n            </Form.Item>\r\n            <Form.Item >\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                    Register\r\n                </Button>\r\n            </Form.Item>\r\n        </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}