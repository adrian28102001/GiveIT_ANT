{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vraga\\\\giveit_Ant\\\\GiveIT_ANT\\\\src\\\\components\\\\RegistrationForm.js\";\nimport React, { Component, useState } from 'react';\nimport { Form, Input, Select, Checkbox, Button } from 'antd';\nimport { DatePicker, Space } from 'antd';\n\nfunction onChange(date, dateString) {\n  console.log(date, dateString);\n}\n\nconst {\n  Option\n} = Select;\n\nclass RegistrationForm extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'Email-ul este invalid!'\n      }, {\n        required: true,\n        message: 'Introduceți Email-ul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"age\",\n      label: \"Data Nasterii\",\n      rules: [{\n        required: true,\n        message: 'Introduceți data nașterii!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Parola\",\n      rules: [{\n        required: true,\n        min: 5,\n        message: 'Introducreți parola!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      placeholder: \"Password\",\n      name: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.changePasswordHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm\\u0103 parola\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Confirmați parola!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('Parola nu coincide!'));\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"nickname\",\n      label: \"Nickname\",\n      rules: [{\n        required: true,\n        message: 'Introduceți nickname-ul!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"residence\",\n      label: \"Orasul\",\n      rules: [{\n        required: true,\n        message: 'Introduceți orașul'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Nr de telefon\",\n      rules: [{\n        required: true,\n        min: 8,\n        max: 8,\n        message: 'Introduceți numarul de telefon!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: 'number',\n      prefix: \"+373\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"gender\",\n      label: \"Genul\",\n      rules: [{\n        required: true,\n        message: 'Selectați genul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"selecteaza genul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"masculin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, \"Masculin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"feminin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Feminin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"altele\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    }, \"Altele\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"Sunt de acord cu \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 46\n      }\n    }, \"termenii \\u0219i condi\\u021Biile\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/vraga/giveit_Ant/GiveIT_ANT/src/components/RegistrationForm.js"],"names":["React","Component","useState","Form","Input","Select","Checkbox","Button","DatePicker","Space","onChange","date","dateString","console","log","Option","RegistrationForm","render","span","type","message","required","min","state","password","changePasswordHandler","getFieldValue","validator","_","value","Promise","resolve","reject","Error","whitespace","max"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button\r\n} from 'antd';\r\n\r\nimport { DatePicker, Space } from 'antd';\r\n\r\nfunction onChange(date, dateString) {\r\n    console.log(date, dateString);\r\n}\r\n\r\nconst { Option } = Select;\r\n\r\n\r\n\r\nclass RegistrationForm extends Component{\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                >\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Email-ul este invalid!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți Email-ul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"age\"\r\n                               label=\"Data Nasterii\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: 'Introduceți data nașterii!',\r\n                                   },\r\n                               ]}>\r\n                        <Space direction=\"vertical\">\r\n                            <DatePicker onChange={onChange}/>\r\n                        </Space>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Parola\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 5,\r\n                                message: 'Introducreți parola!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirmă parola\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Confirmați parola!',\r\n                            },\r\n                            ({getFieldValue}) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('Parola nu coincide!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"nickname\"\r\n                        label=\"Nickname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți nickname-ul!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"residence\"\r\n                        label=\"Orasul\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți orașul',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Nr de telefon\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 8,\r\n                                max: 8,\r\n                                message: 'Introduceți numarul de telefon!',\r\n                            },\r\n                        ]}\r\n                    >\r\n\r\n                        <Input type={'number'}\r\n                               prefix=\"+373\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"gender\"\r\n                        label=\"Genul\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Selectați genul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"selecteaza genul\">\r\n                            <Option value=\"masculin\">Masculin</Option>\r\n                            <Option value=\"feminin\">Feminin</Option>\r\n                            <Option value=\"altele\">Altele</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n\r\n                    >\r\n                        <Checkbox>\r\n                            Sunt de acord cu <a href=\"\">termenii și condițiile</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}