{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vraga\\\\giveit_Ant\\\\GiveIT_ANT\\\\src\\\\components\\\\RegistrationForm.js\";\nimport React, { Component } from 'react';\nimport UserService from \"../service/UserService\";\nimport { DatePicker, Space } from 'antd';\nimport { Form, Input, Select, Checkbox, Button } from 'antd'; // function onChange(date, dateString) {\n//     console.log(date, dateString);\n//     //here\n// }\n//\n\nconst {\n  Option\n} = Select;\n\nclass RegistrationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUser = event => {\n      event.preventDefault();\n      let user = {\n        userName: this.state.userName,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        province: this.state.province,\n        birthday: this.state.birthday,\n        gender: this.state.gender\n      };\n      console.log('user => ' + JSON.stringify(user));\n      UserService.createUser(user).then(res => {\n        this.props.history.push('/users');\n      });\n    };\n\n    this.changeUserNameHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.changeFirstNameHandler = event => {\n      this.setState({\n        firstName: event.target.value\n      });\n    };\n\n    this.changeLastNameHandler = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    this.changeEmailHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.changePasswordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.changePhoneHandler = event => {\n      this.setState({\n        phone: event.target.value\n      });\n    };\n\n    this.changeProvinceHandler = event => {\n      this.setState({\n        province: event.target.value\n      });\n    };\n\n    this.changeBirthdayHandler = event => {\n      // onChange();\n      this.setState({\n        birthday: event.target.value\n      });\n    };\n\n    this.changeGenderHandler = event => {\n      this.setState({\n        gender: event.target.value\n      });\n    };\n\n    this.state = {\n      //id: this.props.match.params.id,\n      userName: '',\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      province: '',\n      password: '',\n      birthday: '',\n      gender: ''\n    };\n    this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\n    this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\n    this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\n    this.changeEmailHandler = this.changeEmailHandler.bind(this);\n    this.changePasswordHandler = this.changePasswordHandler.bind(this);\n    this.changePhoneHandler = this.changePhoneHandler.bind(this);\n    this.changeProvinceHandler = this.changeProvinceHandler.bind(this);\n    this.changeBirthdayHandler = this.changeBirthdayHandler.bind(this);\n    this.changeGenderHandler = this.changeGenderHandler.bind(this);\n    this.saveUser = this.saveUser.bind(this);\n  }\n\n  cancel() {\n    this.props.history.push('/users');\n  } //Assign the new values to user\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 14\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: 'email',\n        message: 'Email-ul este invalid!'\n      }, {\n        required: true,\n        message: 'Introduceți Email-ul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Email\",\n      name: \"email\",\n      className: \"form-control\",\n      value: this.state.email,\n      onChange: this.changeEmailHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"age\",\n      label: \"Data Nasterii\",\n      rules: [{\n        required: true,\n        message: 'Introduceți data nașterii!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Space, {\n      direction: \"vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      placeholder: \"Birthdate\",\n      name: \"birthday\",\n      className: \"form-control\",\n      value: this.state.birthday,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"password\",\n      label: \"Parola\",\n      rules: [{\n        required: true,\n        min: 5,\n        message: 'Introducreți parola!'\n      }],\n      hasFeedback: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      placeholder: \"Password\",\n      name: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.changePasswordHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"confirm\",\n      label: \"Confirm\\u0103 parola\",\n      dependencies: ['password'],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: 'Confirmați parola!'\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue('password') === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error('Parola nu coincide!'));\n        }\n\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input.Password, {\n      placeholder: \"Confirm Password\",\n      name: \"password\",\n      className: \"form-control\",\n      value: this.state.password,\n      onChange: this.changePasswordHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"nickname\",\n      label: \"Nickname\",\n      rules: [{\n        required: true,\n        message: 'Introduceți nickname-ul!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"lastname\",\n      label: \"Nume\",\n      rules: [{\n        required: true,\n        message: 'Introduceți numele!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"Last Name\",\n      name: \"lastName\",\n      className: \"form-control\",\n      value: this.state.lastName,\n      onChange: this.changeLastNameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"firstname\",\n      label: \"Prenume\",\n      rules: [{\n        required: true,\n        message: 'Introduceți prenumele!',\n        whitespace: true\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      placeholder: \"First Name\",\n      name: \"firstName\",\n      className: \"form-control\",\n      value: this.state.firstName,\n      onChange: this.changeFirstNameHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"phone\",\n      label: \"Nr de telefon\",\n      rules: [{\n        required: true,\n        min: 8,\n        max: 8,\n        message: 'Introduceți numarul de telefon!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: 'number',\n      prefix: \"+373\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      className: \"form-control\",\n      value: this.state.phone,\n      onChange: this.changePhoneHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"gender\",\n      label: \"Genul\",\n      rules: [{\n        required: true,\n        message: 'Selectați genul!'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      placeholder: \"selecteaza genul\",\n      onClick: this.changeGenderHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"sexul puternimc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, \"Masculin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"sexul frumos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 29\n      }\n    }, \"Feminin\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"ambele\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 29\n      }\n    }, \"Altele\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement'))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, \"Sunt de acord cu \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 46\n      }\n    }, \"termenii \\u0219i condi\\u021Biile\"))), /*#__PURE__*/React.createElement(Form.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      onClick: this.saveUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, \"Register\"))));\n  }\n\n}\n\nexport default RegistrationForm;","map":{"version":3,"sources":["C:/Users/vraga/giveit_Ant/GiveIT_ANT/src/components/RegistrationForm.js"],"names":["React","Component","UserService","DatePicker","Space","Form","Input","Select","Checkbox","Button","Option","RegistrationForm","constructor","props","saveUser","event","preventDefault","user","userName","state","firstName","lastName","email","password","phone","province","birthday","gender","console","log","JSON","stringify","createUser","then","res","history","push","changeUserNameHandler","setState","target","value","changeFirstNameHandler","changeLastNameHandler","changeEmailHandler","changePasswordHandler","changePhoneHandler","changeProvinceHandler","changeBirthdayHandler","changeGenderHandler","bind","cancel","render","span","type","message","required","onChange","min","getFieldValue","validator","_","Promise","resolve","reject","Error","whitespace","max"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport UserService from \"../service/UserService\";\r\nimport {DatePicker, Space} from 'antd';\r\nimport {\r\n    Form,\r\n    Input,\r\n    Select,\r\n    Checkbox,\r\n    Button\r\n} from 'antd';\r\n\r\n// function onChange(date, dateString) {\r\n//     console.log(date, dateString);\r\n//     //here\r\n// }\r\n//\r\nconst {Option} = Select;\r\n\r\n\r\nclass RegistrationForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            //id: this.props.match.params.id,\r\n            userName: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            province: '',\r\n            password: '',\r\n            birthday: '',\r\n            gender: ''\r\n        }\r\n        this.changeUserNameHandler = this.changeUserNameHandler.bind(this);\r\n        this.changeFirstNameHandler = this.changeFirstNameHandler.bind(this);\r\n        this.changeLastNameHandler = this.changeLastNameHandler.bind(this);\r\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\r\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\r\n        this.changePhoneHandler = this.changePhoneHandler.bind(this);\r\n        this.changeProvinceHandler = this.changeProvinceHandler.bind(this);\r\n        this.changeBirthdayHandler = this.changeBirthdayHandler.bind(this);\r\n        this.changeGenderHandler = this.changeGenderHandler.bind(this);\r\n\r\n        this.saveUser = this.saveUser.bind(this);\r\n    }\r\n\r\n    saveUser = (event) => {\r\n        event.preventDefault();\r\n\r\n        let user = {\r\n            userName: this.state.userName,\r\n            firstName: this.state.firstName,\r\n            lastName: this.state.lastName,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            phone: this.state.phone,\r\n            province: this.state.province,\r\n            birthday: this.state.birthday,\r\n            gender: this.state.gender\r\n        };\r\n        console.log('user => ' + JSON.stringify(user));\r\n\r\n        UserService.createUser(user).then((res) => {\r\n            this.props.history.push('/users');\r\n        });\r\n    }\r\n\r\n    cancel() {\r\n        this.props.history.push('/users');\r\n    }\r\n\r\n    //Assign the new values to user\r\n    changeUserNameHandler = (event) => {\r\n        this.setState({userName: event.target.value});\r\n    }\r\n\r\n    changeFirstNameHandler = (event) => {\r\n        this.setState({firstName: event.target.value});\r\n    }\r\n\r\n    changeLastNameHandler = (event) => {\r\n        this.setState({lastName: event.target.value});\r\n    }\r\n\r\n    changeEmailHandler = (event) => {\r\n        this.setState({email: event.target.value});\r\n    }\r\n\r\n    changePasswordHandler = (event) => {\r\n        this.setState({password: event.target.value});\r\n    }\r\n\r\n    changePhoneHandler = (event) => {\r\n        this.setState({phone: event.target.value});\r\n    }\r\n\r\n    changeProvinceHandler = (event) => {\r\n        this.setState({province: event.target.value});\r\n    }\r\n\r\n    changeBirthdayHandler = (event) => {\r\n        // onChange();\r\n        this.setState({birthday: event.target.value});\r\n    }\r\n\r\n    changeGenderHandler = (event) => {\r\n        this.setState({gender: event.target.value});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Form\r\n                    labelCol={{\r\n                        span: 4,\r\n                    }}\r\n                    wrapperCol={{\r\n                        span: 14,\r\n                    }}\r\n                >\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                            {\r\n                                type: 'email',\r\n                                message: 'Email-ul este invalid!',\r\n                            },\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți Email-ul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Email\" name=\"email\" className=\"form-control\"\r\n                               value={this.state.email} onChange={this.changeEmailHandler}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"age\"\r\n                               label=\"Data Nasterii\"\r\n                               rules={[\r\n                                   {\r\n                                       required: true,\r\n                                       message: 'Introduceți data nașterii!',\r\n                                   },\r\n                               ]}>\r\n                        <Space direction=\"vertical\">\r\n                            <DatePicker placeholder=\"Birthdate\" name=\"birthday\" className=\"form-control\"\r\n                                        value={this.state.birthday} onChange={this.onChange}/>\r\n                        </Space>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Parola\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 5,\r\n                                message: 'Introducreți parola!',\r\n                            },\r\n                        ]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password placeholder=\"Password\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirmă parola\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Confirmați parola!',\r\n                            },\r\n                            ({getFieldValue}) => ({\r\n                                validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('Parola nu coincide!'));\r\n                                },\r\n                            }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password placeholder=\"Confirm Password\" name=\"password\" className=\"form-control\"\r\n                                        value={this.state.password} onChange={this.changePasswordHandler}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"nickname\"\r\n                        label=\"Nickname\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți nickname-ul!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"lastname\"\r\n                        label=\"Nume\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți numele!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"Last Name\" name=\"lastName\" className=\"form-control\"\r\n                               value={this.state.lastName} onChange={this.changeLastNameHandler}/>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"firstname\"\r\n                        label=\"Prenume\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Introduceți prenumele!',\r\n                                whitespace: true,\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder=\"First Name\" name=\"firstName\" className=\"form-control\"\r\n                               value={this.state.firstName} onChange={this.changeFirstNameHandler}/>\r\n                    </Form.Item>\r\n\r\n\r\n\r\n                    <Form.Item\r\n                        name=\"phone\"\r\n                        label=\"Nr de telefon\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                min: 8,\r\n                                max: 8,\r\n                                message: 'Introduceți numarul de telefon!',\r\n                            },\r\n                        ]}\r\n                    >\r\n\r\n                        <Input type={'number'}\r\n                               prefix=\"+373\"\r\n                               placeholder=\"Phone\" name=\"phone\" className=\"form-control\"\r\n                               value={this.state.phone} onChange={this.changePhoneHandler}\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"gender\"\r\n                        label=\"Genul\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Selectați genul!',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Select placeholder=\"selecteaza genul\" onClick={this.changeGenderHandler}>\r\n                            <Option value=\"sexul puternimc\">Masculin</Option>\r\n                            <Option value=\"sexul frumos\">Feminin</Option>\r\n                            <Option value=\"ambele\">Altele</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                            {\r\n                                validator: (_, value) =>\r\n                                    value ? Promise.resolve() : Promise.reject(new Error('Should accept agreement')),\r\n                            },\r\n                        ]}\r\n\r\n                    >\r\n                        <Checkbox>\r\n                            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\r\n                            Sunt de acord cu <a href=\"\">termenii și condițiile</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\"  onClick={this.saveUser}>\r\n                            Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegistrationForm;"]},"metadata":{},"sourceType":"module"}